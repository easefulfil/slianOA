<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sliansoft.slianOA.dataaccess.dao.OaAskForLeaveMapper" >
  <resultMap id="BaseResultMap" type="com.sliansoft.slianOA.dataaccess.model.OaAskForLeave" >
    <id column="afl_id" property="aflId" jdbcType="INTEGER" />
    <result column="employee_id" property="employeeId" jdbcType="INTEGER" />
    <result column="begin_time" property="beginTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="afl_type" property="aflType" jdbcType="VARCHAR" />
    <result column="afl_style" property="aflStyle" jdbcType="VARCHAR" />
    <result column="afl_reason" property="aflReason" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="afl_regist_time" property="aflRegistTime" jdbcType="TIMESTAMP" />
    <result column="view_employee_ids" property="viewEmployeeIds" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="access_group" property="accessGroup" jdbcType="INTEGER" />
    <result column="amend_time" property="amendTime" jdbcType="TIMESTAMP" />
    <result column="amender" property="amender" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="creator" property="creator" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    afl_id, employee_id, begin_time, end_time, afl_type, afl_style, afl_reason, status, 
    afl_regist_time, view_employee_ids, remark, access_group, amend_time, amender, create_time, 
    creator, title, type
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sliansoft.slianOA.dataaccess.model.OaAskForLeaveExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from oa_ask_for_leave
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from oa_ask_for_leave
    where afl_id = #{aflId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from oa_ask_for_leave
    where afl_id = #{aflId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sliansoft.slianOA.dataaccess.model.OaAskForLeaveExample" >
    delete from oa_ask_for_leave
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sliansoft.slianOA.dataaccess.model.OaAskForLeave" >
    insert into oa_ask_for_leave (afl_id, employee_id, begin_time, 
      end_time, afl_type, afl_style, 
      afl_reason, status, afl_regist_time, 
      view_employee_ids, remark, access_group, 
      amend_time, amender, create_time, 
      creator, title, type
      )
    values (#{aflId,jdbcType=INTEGER}, #{employeeId,jdbcType=INTEGER}, #{beginTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{aflType,jdbcType=VARCHAR}, #{aflStyle,jdbcType=VARCHAR}, 
      #{aflReason,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{aflRegistTime,jdbcType=TIMESTAMP}, 
      #{viewEmployeeIds,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{accessGroup,jdbcType=INTEGER}, 
      #{amendTime,jdbcType=TIMESTAMP}, #{amender,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{creator,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sliansoft.slianOA.dataaccess.model.OaAskForLeave" useGeneratedKeys="true" keyProperty="aflId">
    insert into oa_ask_for_leave
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="aflId != null" >
        afl_id,
      </if>
      <if test="employeeId != null" >
        employee_id,
      </if>
      <if test="beginTime != null" >
        begin_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="aflType != null" >
        afl_type,
      </if>
      <if test="aflStyle != null" >
        afl_style,
      </if>
      <if test="aflReason != null" >
        afl_reason,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="aflRegistTime != null" >
        afl_regist_time,
      </if>
      <if test="viewEmployeeIds != null" >
        view_employee_ids,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="accessGroup != null" >
        access_group,
      </if>
      <if test="amendTime != null" >
        amend_time,
      </if>
      <if test="amender != null" >
        amender,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="type != null" >
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="aflId != null" >
        #{aflId,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null" >
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="beginTime != null" >
        #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="aflType != null" >
        #{aflType,jdbcType=VARCHAR},
      </if>
      <if test="aflStyle != null" >
        #{aflStyle,jdbcType=VARCHAR},
      </if>
      <if test="aflReason != null" >
        #{aflReason,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="aflRegistTime != null" >
        #{aflRegistTime,jdbcType=TIMESTAMP},
      </if>
      <if test="viewEmployeeIds != null" >
        #{viewEmployeeIds,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="accessGroup != null" >
        #{accessGroup,jdbcType=INTEGER},
      </if>
      <if test="amendTime != null" >
        #{amendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amender != null" >
        #{amender,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sliansoft.slianOA.dataaccess.model.OaAskForLeaveExample" resultType="java.lang.Integer" >
    select count(*) from oa_ask_for_leave
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update oa_ask_for_leave
    <set >
      <if test="record.aflId != null" >
        afl_id = #{record.aflId,jdbcType=INTEGER},
      </if>
      <if test="record.employeeId != null" >
        employee_id = #{record.employeeId,jdbcType=INTEGER},
      </if>
      <if test="record.beginTime != null" >
        begin_time = #{record.beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.aflType != null" >
        afl_type = #{record.aflType,jdbcType=VARCHAR},
      </if>
      <if test="record.aflStyle != null" >
        afl_style = #{record.aflStyle,jdbcType=VARCHAR},
      </if>
      <if test="record.aflReason != null" >
        afl_reason = #{record.aflReason,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.aflRegistTime != null" >
        afl_regist_time = #{record.aflRegistTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.viewEmployeeIds != null" >
        view_employee_ids = #{record.viewEmployeeIds,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.accessGroup != null" >
        access_group = #{record.accessGroup,jdbcType=INTEGER},
      </if>
      <if test="record.amendTime != null" >
        amend_time = #{record.amendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.amender != null" >
        amender = #{record.amender,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creator != null" >
        creator = #{record.creator,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update oa_ask_for_leave
    set afl_id = #{record.aflId,jdbcType=INTEGER},
      employee_id = #{record.employeeId,jdbcType=INTEGER},
      begin_time = #{record.beginTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      afl_type = #{record.aflType,jdbcType=VARCHAR},
      afl_style = #{record.aflStyle,jdbcType=VARCHAR},
      afl_reason = #{record.aflReason,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      afl_regist_time = #{record.aflRegistTime,jdbcType=TIMESTAMP},
      view_employee_ids = #{record.viewEmployeeIds,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      access_group = #{record.accessGroup,jdbcType=INTEGER},
      amend_time = #{record.amendTime,jdbcType=TIMESTAMP},
      amender = #{record.amender,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      creator = #{record.creator,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sliansoft.slianOA.dataaccess.model.OaAskForLeave" >
    update oa_ask_for_leave
    <set >
      <if test="employeeId != null" >
        employee_id = #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="beginTime != null" >
        begin_time = #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="aflType != null" >
        afl_type = #{aflType,jdbcType=VARCHAR},
      </if>
      <if test="aflStyle != null" >
        afl_style = #{aflStyle,jdbcType=VARCHAR},
      </if>
      <if test="aflReason != null" >
        afl_reason = #{aflReason,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="aflRegistTime != null" >
        afl_regist_time = #{aflRegistTime,jdbcType=TIMESTAMP},
      </if>
      <if test="viewEmployeeIds != null" >
        view_employee_ids = #{viewEmployeeIds,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="accessGroup != null" >
        access_group = #{accessGroup,jdbcType=INTEGER},
      </if>
      <if test="amendTime != null" >
        amend_time = #{amendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amender != null" >
        amender = #{amender,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
    </set>
    where afl_id = #{aflId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sliansoft.slianOA.dataaccess.model.OaAskForLeave" >
    update oa_ask_for_leave
    set employee_id = #{employeeId,jdbcType=INTEGER},
      begin_time = #{beginTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      afl_type = #{aflType,jdbcType=VARCHAR},
      afl_style = #{aflStyle,jdbcType=VARCHAR},
      afl_reason = #{aflReason,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      afl_regist_time = #{aflRegistTime,jdbcType=TIMESTAMP},
      view_employee_ids = #{viewEmployeeIds,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      access_group = #{accessGroup,jdbcType=INTEGER},
      amend_time = #{amendTime,jdbcType=TIMESTAMP},
      amender = #{amender,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR}
    where afl_id = #{aflId,jdbcType=INTEGER}
  </update>
  <resultMap id="selectPageResult" extends="BaseResultMap" type="com.sliansoft.slianOA.dataaccess.model.OaAskForLeave" >
    <!--
<association property="" column="" javaType="">
   <id column="" property="" jdbcType="" />
   <result column="" property="" jdbcType="" />
 </association>
-->
  </resultMap>
  <sql id="select_by_page_outter_where_sql" >
      <if test="oredCriteria.size>0">     <if test="_parameter != null" > <include refid="Example_Where_Clause"/> </if>    and   </if>  <if test="oredCriteria.size==0">     where   </if> 
  </sql>
  <sql id="select_by_page_inner_where_and_orderby_sql" >
      <if test="oredCriteria.size>0">     <if test="_parameter != null" > <include refid="Example_Where_Clause"/> </if>  </if>   <if test="orderByClause != null">    order by ${orderByClause}   </if> 
  </sql>
  <sql id="select_by_page_outter_orderby_sql" >
       <if test="orderByClause != null">    order by ${orderByClause}   </if> 
  </sql>
  <select id="selectPage" resultMap="selectPageResult" parameterType="com.sliansoft.slianOA.dataaccess.model.OaAskForLeaveExample" >
    select a.* from oa_ask_for_leave a where a.afl_id in 
 (select top ${pageSize} afl_id from oa_ask_for_leave 
<include refid="select_by_page_outter_where_sql"/> 
afl_id not in (select top ${skipRecordCount} afl_id from oa_ask_for_leave
<include refid="select_by_page_inner_where_and_orderby_sql"/> 
 ) 
<include refid="select_by_page_outter_orderby_sql"/> 
)
<include refid="select_by_page_outter_orderby_sql"/> 
  </select>
  
    <sql id="select_by_page1_outter_where_sql" >
      <if test="oredCriteria.size>0">     <if test="_parameter != null" > <include refid="Example_Where_Clause"/> </if>    and   </if>  <if test="oredCriteria.size==0">     where   </if> 
  </sql>
  <sql id="select_by_page1_inner_where_and_orderby_sql" >
      <if test="oredCriteria.size>0">     <if test="_parameter != null" > <include refid="Example_Where_Clause"/> </if>  </if>   <if test="orderByClause != null">    order by ${orderByClause}   </if> 
  </sql>
  <sql id="select_by_page1_outter_orderby_sql" >
       <if test="orderByClause != null">    order by ${orderByClause}   </if> 
  </sql>
  <select id="selectPage1" resultMap="selectPageResult" parameterType="com.sliansoft.slianOA.dataaccess.model.OaAskForLeaveExample" >
    select a.* from oa_ask_for_leave a where a.status='处理中' and a.afl_id in 
 (select top ${pageSize} afl_id from oa_ask_for_leave 
<include refid="select_by_page1_outter_where_sql"/> 
afl_id not in (select top ${skipRecordCount} afl_id from oa_ask_for_leave
<include refid="select_by_page1_inner_where_and_orderby_sql"/> 
 ) 
<include refid="select_by_page1_outter_orderby_sql"/> 
)
<include refid="select_by_page1_outter_orderby_sql"/> 
  </select>
</mapper>