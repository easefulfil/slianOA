<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sliansoft.slianOA.dataaccess.dao.OaAssetChangeDetailMapper" >
  <resultMap id="BaseResultMap" type="com.sliansoft.slianOA.dataaccess.model.OaAssetChangeDetail" >
    <id column="asset_change_detail_id" property="assetChangeDetailId" jdbcType="INTEGER" />
    <result column="asset_change_id" property="assetChangeId" jdbcType="INTEGER" />
    <result column="asset_id" property="assetId" jdbcType="INTEGER" />
    <result column="detail_name" property="detailName" jdbcType="VARCHAR" />
    <result column="currency" property="currency" jdbcType="VARCHAR" />
    <result column="unit_price" property="unitPrice" jdbcType="DOUBLE" />
    <result column="amount" property="amount" jdbcType="INTEGER" />
    <result column="current_amount" property="currentAmount" jdbcType="INTEGER" />
    <result column="event_time" property="eventTime" jdbcType="TIMESTAMP" />
    <result column="change_type" property="changeType" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="access_group" property="accessGroup" jdbcType="INTEGER" />
    <result column="amend_time" property="amendTime" jdbcType="TIMESTAMP" />
    <result column="amender" property="amender" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="creator" property="creator" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    asset_change_detail_id, asset_change_id, asset_id, detail_name, currency, unit_price, 
    amount, current_amount, event_time, change_type, remark, access_group, amend_time, 
    amender, create_time, creator
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sliansoft.slianOA.dataaccess.model.OaAssetChangeDetailExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from oa_asset_change_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from oa_asset_change_detail
    where asset_change_detail_id = #{assetChangeDetailId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from oa_asset_change_detail
    where asset_change_detail_id = #{assetChangeDetailId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sliansoft.slianOA.dataaccess.model.OaAssetChangeDetailExample" >
    delete from oa_asset_change_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sliansoft.slianOA.dataaccess.model.OaAssetChangeDetail" >
    insert into oa_asset_change_detail (asset_change_detail_id, asset_change_id, 
      asset_id, detail_name, currency, 
      unit_price, amount, current_amount, 
      event_time, change_type, remark, 
      access_group, amend_time, amender, 
      create_time, creator)
    values (#{assetChangeDetailId,jdbcType=INTEGER}, #{assetChangeId,jdbcType=INTEGER}, 
      #{assetId,jdbcType=INTEGER}, #{detailName,jdbcType=VARCHAR}, #{currency,jdbcType=VARCHAR}, 
      #{unitPrice,jdbcType=DOUBLE}, #{amount,jdbcType=INTEGER}, #{currentAmount,jdbcType=INTEGER}, 
      #{eventTime,jdbcType=TIMESTAMP}, #{changeType,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{accessGroup,jdbcType=INTEGER}, #{amendTime,jdbcType=TIMESTAMP}, #{amender,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{creator,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sliansoft.slianOA.dataaccess.model.OaAssetChangeDetail" >
    insert into oa_asset_change_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="assetChangeDetailId != null" >
        asset_change_detail_id,
      </if>
      <if test="assetChangeId != null" >
        asset_change_id,
      </if>
      <if test="assetId != null" >
        asset_id,
      </if>
      <if test="detailName != null" >
        detail_name,
      </if>
      <if test="currency != null" >
        currency,
      </if>
      <if test="unitPrice != null" >
        unit_price,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="currentAmount != null" >
        current_amount,
      </if>
      <if test="eventTime != null" >
        event_time,
      </if>
      <if test="changeType != null" >
        change_type,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="accessGroup != null" >
        access_group,
      </if>
      <if test="amendTime != null" >
        amend_time,
      </if>
      <if test="amender != null" >
        amender,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="creator != null" >
        creator,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="assetChangeDetailId != null" >
        #{assetChangeDetailId,jdbcType=INTEGER},
      </if>
      <if test="assetChangeId != null" >
        #{assetChangeId,jdbcType=INTEGER},
      </if>
      <if test="assetId != null" >
        #{assetId,jdbcType=INTEGER},
      </if>
      <if test="detailName != null" >
        #{detailName,jdbcType=VARCHAR},
      </if>
      <if test="currency != null" >
        #{currency,jdbcType=VARCHAR},
      </if>
      <if test="unitPrice != null" >
        #{unitPrice,jdbcType=DOUBLE},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="currentAmount != null" >
        #{currentAmount,jdbcType=INTEGER},
      </if>
      <if test="eventTime != null" >
        #{eventTime,jdbcType=TIMESTAMP},
      </if>
      <if test="changeType != null" >
        #{changeType,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="accessGroup != null" >
        #{accessGroup,jdbcType=INTEGER},
      </if>
      <if test="amendTime != null" >
        #{amendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amender != null" >
        #{amender,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sliansoft.slianOA.dataaccess.model.OaAssetChangeDetailExample" resultType="java.lang.Integer" >
    select count(*) from oa_asset_change_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update oa_asset_change_detail
    <set >
      <if test="record.assetChangeDetailId != null" >
        asset_change_detail_id = #{record.assetChangeDetailId,jdbcType=INTEGER},
      </if>
      <if test="record.assetChangeId != null" >
        asset_change_id = #{record.assetChangeId,jdbcType=INTEGER},
      </if>
      <if test="record.assetId != null" >
        asset_id = #{record.assetId,jdbcType=INTEGER},
      </if>
      <if test="record.detailName != null" >
        detail_name = #{record.detailName,jdbcType=VARCHAR},
      </if>
      <if test="record.currency != null" >
        currency = #{record.currency,jdbcType=VARCHAR},
      </if>
      <if test="record.unitPrice != null" >
        unit_price = #{record.unitPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=INTEGER},
      </if>
      <if test="record.currentAmount != null" >
        current_amount = #{record.currentAmount,jdbcType=INTEGER},
      </if>
      <if test="record.eventTime != null" >
        event_time = #{record.eventTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.changeType != null" >
        change_type = #{record.changeType,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.accessGroup != null" >
        access_group = #{record.accessGroup,jdbcType=INTEGER},
      </if>
      <if test="record.amendTime != null" >
        amend_time = #{record.amendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.amender != null" >
        amender = #{record.amender,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creator != null" >
        creator = #{record.creator,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update oa_asset_change_detail
    set asset_change_detail_id = #{record.assetChangeDetailId,jdbcType=INTEGER},
      asset_change_id = #{record.assetChangeId,jdbcType=INTEGER},
      asset_id = #{record.assetId,jdbcType=INTEGER},
      detail_name = #{record.detailName,jdbcType=VARCHAR},
      currency = #{record.currency,jdbcType=VARCHAR},
      unit_price = #{record.unitPrice,jdbcType=DOUBLE},
      amount = #{record.amount,jdbcType=INTEGER},
      current_amount = #{record.currentAmount,jdbcType=INTEGER},
      event_time = #{record.eventTime,jdbcType=TIMESTAMP},
      change_type = #{record.changeType,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      access_group = #{record.accessGroup,jdbcType=INTEGER},
      amend_time = #{record.amendTime,jdbcType=TIMESTAMP},
      amender = #{record.amender,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      creator = #{record.creator,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sliansoft.slianOA.dataaccess.model.OaAssetChangeDetail" >
    update oa_asset_change_detail
    <set >
      <if test="assetChangeId != null" >
        asset_change_id = #{assetChangeId,jdbcType=INTEGER},
      </if>
      <if test="assetId != null" >
        asset_id = #{assetId,jdbcType=INTEGER},
      </if>
      <if test="detailName != null" >
        detail_name = #{detailName,jdbcType=VARCHAR},
      </if>
      <if test="currency != null" >
        currency = #{currency,jdbcType=VARCHAR},
      </if>
      <if test="unitPrice != null" >
        unit_price = #{unitPrice,jdbcType=DOUBLE},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="currentAmount != null" >
        current_amount = #{currentAmount,jdbcType=INTEGER},
      </if>
      <if test="eventTime != null" >
        event_time = #{eventTime,jdbcType=TIMESTAMP},
      </if>
      <if test="changeType != null" >
        change_type = #{changeType,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="accessGroup != null" >
        access_group = #{accessGroup,jdbcType=INTEGER},
      </if>
      <if test="amendTime != null" >
        amend_time = #{amendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amender != null" >
        amender = #{amender,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=INTEGER},
      </if>
    </set>
    where asset_change_detail_id = #{assetChangeDetailId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sliansoft.slianOA.dataaccess.model.OaAssetChangeDetail" >
    update oa_asset_change_detail
    set asset_change_id = #{assetChangeId,jdbcType=INTEGER},
      asset_id = #{assetId,jdbcType=INTEGER},
      detail_name = #{detailName,jdbcType=VARCHAR},
      currency = #{currency,jdbcType=VARCHAR},
      unit_price = #{unitPrice,jdbcType=DOUBLE},
      amount = #{amount,jdbcType=INTEGER},
      current_amount = #{currentAmount,jdbcType=INTEGER},
      event_time = #{eventTime,jdbcType=TIMESTAMP},
      change_type = #{changeType,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      access_group = #{accessGroup,jdbcType=INTEGER},
      amend_time = #{amendTime,jdbcType=TIMESTAMP},
      amender = #{amender,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=INTEGER}
    where asset_change_detail_id = #{assetChangeDetailId,jdbcType=INTEGER}
  </update>
  <resultMap id="selectPageResult" extends="BaseResultMap" type="com.sliansoft.slianOA.dataaccess.model.OaAssetChangeDetail" >
    <!--
<association property="" column="" javaType="">
   <id column="" property="" jdbcType="" />
   <result column="" property="" jdbcType="" />
 </association>
-->
  </resultMap>
  <sql id="select_by_page_outter_where_sql" >
      <if test="oredCriteria.size>0">     <if test="_parameter != null" > <include refid="Example_Where_Clause"/> </if>  and   </if>  <if test="oredCriteria.size==0">     where   </if> 
  </sql>
  <sql id="select_by_page_inner_where_and_orderby_sql" >
      <if test="oredCriteria.size>0">     <if test="_parameter != null" > <include refid="Example_Where_Clause"/> </if>  </if>   <if test="orderByClause != null">    order by ${orderByClause}   </if> 
  </sql>
  <sql id="select_by_page_outter_orderby_sql" >
       <if test="orderByClause != null">    order by ${orderByClause}   </if> 
  </sql>
  <select id="selectPage" resultMap="selectPageResult" parameterType="com.sliansoft.slianOA.dataaccess.model.OaAssetChangeDetailExample" >
    select a.* from oa_asset_change_detail a where a.asset_change_detail_id in 
 (select top ${pageSize} asset_change_detail_id from oa_asset_change_detail 
<include refid="select_by_page_outter_where_sql"/> 
asset_change_detail_id not in (select top ${skipRecordCount} asset_change_detail_id from oa_asset_change_detail  
<include refid="select_by_page_inner_where_and_orderby_sql"/> 
 ) 
<include refid="select_by_page_outter_orderby_sql"/> 
  )
  </select>
</mapper>