<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sliansoft.slianOA.dataaccess.dao.OaErrorCorrectionMapper" >
  <resultMap id="BaseResultMap" type="com.sliansoft.slianOA.dataaccess.model.OaErrorCorrection" >
    <id column="error_correction_id" property="errorCorrectionId" jdbcType="INTEGER" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="proposer_id" property="proposerId" jdbcType="INTEGER" />
    <result column="duty_id" property="dutyId" jdbcType="INTEGER" />
    <result column="charger_id" property="chargerId" jdbcType="INTEGER" />
    <result column="quality_id" property="qualityId" jdbcType="INTEGER" />
    <result column="content1" property="content1" jdbcType="VARCHAR" />
    <result column="content2" property="content2" jdbcType="VARCHAR" />
    <result column="content3" property="content3" jdbcType="VARCHAR" />
    <result column="content4" property="content4" jdbcType="VARCHAR" />
    <result column="complete_time" property="completeTime" jdbcType="TIMESTAMP" />
    <result column="access_group" property="accessGroup" jdbcType="INTEGER" />
    <result column="amend_time" property="amendTime" jdbcType="TIMESTAMP" />
    <result column="amender" property="amender" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="creator" property="creator" jdbcType="INTEGER" />
    <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    error_correction_id, code, proposer_id, duty_id, charger_id, quality_id, content1, 
    content2, content3, content4, complete_time, access_group, amend_time, amender, create_time, 
    creator, is_delete
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sliansoft.slianOA.dataaccess.model.OaErrorCorrectionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from oa_error_correction
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from oa_error_correction
    where error_correction_id = #{errorCorrectionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from oa_error_correction
    where error_correction_id = #{errorCorrectionId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sliansoft.slianOA.dataaccess.model.OaErrorCorrectionExample" >
    delete from oa_error_correction
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sliansoft.slianOA.dataaccess.model.OaErrorCorrection" >
    insert into oa_error_correction (error_correction_id, code, proposer_id, 
      duty_id, charger_id, quality_id, 
      content1, content2, content3, 
      content4, complete_time, access_group, 
      amend_time, amender, create_time, 
      creator, is_delete)
    values (#{errorCorrectionId,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{proposerId,jdbcType=INTEGER}, 
      #{dutyId,jdbcType=INTEGER}, #{chargerId,jdbcType=INTEGER}, #{qualityId,jdbcType=INTEGER}, 
      #{content1,jdbcType=VARCHAR}, #{content2,jdbcType=VARCHAR}, #{content3,jdbcType=VARCHAR}, 
      #{content4,jdbcType=VARCHAR}, #{completeTime,jdbcType=TIMESTAMP}, #{accessGroup,jdbcType=INTEGER}, 
      #{amendTime,jdbcType=TIMESTAMP}, #{amender,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{creator,jdbcType=INTEGER}, #{isDelete,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sliansoft.slianOA.dataaccess.model.OaErrorCorrection" >
    insert into oa_error_correction
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="errorCorrectionId != null" >
        error_correction_id,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="proposerId != null" >
        proposer_id,
      </if>
      <if test="dutyId != null" >
        duty_id,
      </if>
      <if test="chargerId != null" >
        charger_id,
      </if>
      <if test="qualityId != null" >
        quality_id,
      </if>
      <if test="content1 != null" >
        content1,
      </if>
      <if test="content2 != null" >
        content2,
      </if>
      <if test="content3 != null" >
        content3,
      </if>
      <if test="content4 != null" >
        content4,
      </if>
      <if test="completeTime != null" >
        complete_time,
      </if>
      <if test="accessGroup != null" >
        access_group,
      </if>
      <if test="amendTime != null" >
        amend_time,
      </if>
      <if test="amender != null" >
        amender,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="errorCorrectionId != null" >
        #{errorCorrectionId,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="proposerId != null" >
        #{proposerId,jdbcType=INTEGER},
      </if>
      <if test="dutyId != null" >
        #{dutyId,jdbcType=INTEGER},
      </if>
      <if test="chargerId != null" >
        #{chargerId,jdbcType=INTEGER},
      </if>
      <if test="qualityId != null" >
        #{qualityId,jdbcType=INTEGER},
      </if>
      <if test="content1 != null" >
        #{content1,jdbcType=VARCHAR},
      </if>
      <if test="content2 != null" >
        #{content2,jdbcType=VARCHAR},
      </if>
      <if test="content3 != null" >
        #{content3,jdbcType=VARCHAR},
      </if>
      <if test="content4 != null" >
        #{content4,jdbcType=VARCHAR},
      </if>
      <if test="completeTime != null" >
        #{completeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="accessGroup != null" >
        #{accessGroup,jdbcType=INTEGER},
      </if>
      <if test="amendTime != null" >
        #{amendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amender != null" >
        #{amender,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <insert id="insertAndGetId" useGeneratedKeys="true" keyProperty="errorCorrectionId" parameterType="com.sliansoft.slianOA.dataaccess.model.OaErrorCorrection" >
    insert into oa_error_correction
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="errorCorrectionId != null" >
        error_correction_id,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="proposerId != null" >
        proposer_id,
      </if>
      <if test="dutyId != null" >
        duty_id,
      </if>
      <if test="chargerId != null" >
        charger_id,
      </if>
      <if test="qualityId != null" >
        quality_id,
      </if>
      <if test="content1 != null" >
        content1,
      </if>
      <if test="content2 != null" >
        content2,
      </if>
      <if test="content3 != null" >
        content3,
      </if>
      <if test="content4 != null" >
        content4,
      </if>
      <if test="completeTime != null" >
        complete_time,
      </if>
      <if test="accessGroup != null" >
        access_group,
      </if>
      <if test="amendTime != null" >
        amend_time,
      </if>
      <if test="amender != null" >
        amender,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="errorCorrectionId != null" >
        #{errorCorrectionId,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="proposerId != null" >
        #{proposerId,jdbcType=INTEGER},
      </if>
      <if test="dutyId != null" >
        #{dutyId,jdbcType=INTEGER},
      </if>
      <if test="chargerId != null" >
        #{chargerId,jdbcType=INTEGER},
      </if>
      <if test="qualityId != null" >
        #{qualityId,jdbcType=INTEGER},
      </if>
      <if test="content1 != null" >
        #{content1,jdbcType=VARCHAR},
      </if>
      <if test="content2 != null" >
        #{content2,jdbcType=VARCHAR},
      </if>
      <if test="content3 != null" >
        #{content3,jdbcType=VARCHAR},
      </if>
      <if test="content4 != null" >
        #{content4,jdbcType=VARCHAR},
      </if>
      <if test="completeTime != null" >
        #{completeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="accessGroup != null" >
        #{accessGroup,jdbcType=INTEGER},
      </if>
      <if test="amendTime != null" >
        #{amendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amender != null" >
        #{amender,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sliansoft.slianOA.dataaccess.model.OaErrorCorrectionExample" resultType="java.lang.Integer" >
    select count(*) from oa_error_correction
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update oa_error_correction
    <set >
      <if test="record.errorCorrectionId != null" >
        error_correction_id = #{record.errorCorrectionId,jdbcType=INTEGER},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.proposerId != null" >
        proposer_id = #{record.proposerId,jdbcType=INTEGER},
      </if>
      <if test="record.dutyId != null" >
        duty_id = #{record.dutyId,jdbcType=INTEGER},
      </if>
      <if test="record.chargerId != null" >
        charger_id = #{record.chargerId,jdbcType=INTEGER},
      </if>
      <if test="record.qualityId != null" >
        quality_id = #{record.qualityId,jdbcType=INTEGER},
      </if>
      <if test="record.content1 != null" >
        content1 = #{record.content1,jdbcType=VARCHAR},
      </if>
      <if test="record.content2 != null" >
        content2 = #{record.content2,jdbcType=VARCHAR},
      </if>
      <if test="record.content3 != null" >
        content3 = #{record.content3,jdbcType=VARCHAR},
      </if>
      <if test="record.content4 != null" >
        content4 = #{record.content4,jdbcType=VARCHAR},
      </if>
      <if test="record.completeTime != null" >
        complete_time = #{record.completeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.accessGroup != null" >
        access_group = #{record.accessGroup,jdbcType=INTEGER},
      </if>
      <if test="record.amendTime != null" >
        amend_time = #{record.amendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.amender != null" >
        amender = #{record.amender,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creator != null" >
        creator = #{record.creator,jdbcType=INTEGER},
      </if>
      <if test="record.isDelete != null" >
        is_delete = #{record.isDelete,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update oa_error_correction
    set error_correction_id = #{record.errorCorrectionId,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      proposer_id = #{record.proposerId,jdbcType=INTEGER},
      duty_id = #{record.dutyId,jdbcType=INTEGER},
      charger_id = #{record.chargerId,jdbcType=INTEGER},
      quality_id = #{record.qualityId,jdbcType=INTEGER},
      content1 = #{record.content1,jdbcType=VARCHAR},
      content2 = #{record.content2,jdbcType=VARCHAR},
      content3 = #{record.content3,jdbcType=VARCHAR},
      content4 = #{record.content4,jdbcType=VARCHAR},
      complete_time = #{record.completeTime,jdbcType=TIMESTAMP},
      access_group = #{record.accessGroup,jdbcType=INTEGER},
      amend_time = #{record.amendTime,jdbcType=TIMESTAMP},
      amender = #{record.amender,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      creator = #{record.creator,jdbcType=INTEGER},
      is_delete = #{record.isDelete,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sliansoft.slianOA.dataaccess.model.OaErrorCorrection" >
    update oa_error_correction
    <set >
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="proposerId != null" >
        proposer_id = #{proposerId,jdbcType=INTEGER},
      </if>
      <if test="dutyId != null" >
        duty_id = #{dutyId,jdbcType=INTEGER},
      </if>
      <if test="chargerId != null" >
        charger_id = #{chargerId,jdbcType=INTEGER},
      </if>
      <if test="qualityId != null" >
        quality_id = #{qualityId,jdbcType=INTEGER},
      </if>
      <if test="content1 != null" >
        content1 = #{content1,jdbcType=VARCHAR},
      </if>
      <if test="content2 != null" >
        content2 = #{content2,jdbcType=VARCHAR},
      </if>
      <if test="content3 != null" >
        content3 = #{content3,jdbcType=VARCHAR},
      </if>
      <if test="content4 != null" >
        content4 = #{content4,jdbcType=VARCHAR},
      </if>
      <if test="completeTime != null" >
        complete_time = #{completeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="accessGroup != null" >
        access_group = #{accessGroup,jdbcType=INTEGER},
      </if>
      <if test="amendTime != null" >
        amend_time = #{amendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amender != null" >
        amender = #{amender,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
    </set>
    where error_correction_id = #{errorCorrectionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sliansoft.slianOA.dataaccess.model.OaErrorCorrection" >
    update oa_error_correction
    set code = #{code,jdbcType=VARCHAR},
      proposer_id = #{proposerId,jdbcType=INTEGER},
      duty_id = #{dutyId,jdbcType=INTEGER},
      charger_id = #{chargerId,jdbcType=INTEGER},
      quality_id = #{qualityId,jdbcType=INTEGER},
      content1 = #{content1,jdbcType=VARCHAR},
      content2 = #{content2,jdbcType=VARCHAR},
      content3 = #{content3,jdbcType=VARCHAR},
      content4 = #{content4,jdbcType=VARCHAR},
      complete_time = #{completeTime,jdbcType=TIMESTAMP},
      access_group = #{accessGroup,jdbcType=INTEGER},
      amend_time = #{amendTime,jdbcType=TIMESTAMP},
      amender = #{amender,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=INTEGER}
    where error_correction_id = #{errorCorrectionId,jdbcType=INTEGER}
  </update>
  <resultMap id="selectPageResult" extends="BaseResultMap" type="com.sliansoft.slianOA.dataaccess.model.OaErrorCorrection" >
    <!--
<association property="" column="" javaType="">
   <id column="" property="" jdbcType="" />
   <result column="" property="" jdbcType="" />
 </association>
-->
  </resultMap>
  <sql id="select_by_page_outter_where_sql" >
      <if test="oredCriteria.size>0">     <if test="_parameter != null" > <include refid="Example_Where_Clause"/> </if>    and   </if>  <if test="oredCriteria.size==0">     where   </if> 
  </sql>
  <sql id="select_by_page_inner_where_and_orderby_sql" >
      <if test="oredCriteria.size>0">     <if test="_parameter != null" > <include refid="Example_Where_Clause"/> </if>  </if>   <if test="orderByClause != null">    order by ${orderByClause}   </if> 
  </sql>
  <sql id="select_by_page_outter_orderby_sql" >
       <if test="orderByClause != null">    order by ${orderByClause}   </if> 
  </sql>
  <select id="selectPage" resultMap="selectPageResult" parameterType="com.sliansoft.slianOA.dataaccess.model.OaErrorCorrectionExample" >
    select a.* from oa_error_correction a where a.error_correction_id in 
 (select top ${pageSize} error_correction_id from oa_error_correction 
<include refid="select_by_page_outter_where_sql"/> 
error_correction_id not in (select top ${skipRecordCount} error_correction_id from oa_error_correction  
<include refid="select_by_page_inner_where_and_orderby_sql"/> 
 ) 
<include refid="select_by_page_outter_orderby_sql"/> 
)
  </select>
</mapper>