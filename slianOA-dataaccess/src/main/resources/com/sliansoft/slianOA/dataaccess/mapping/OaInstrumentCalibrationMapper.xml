<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sliansoft.slianOA.dataaccess.dao.OaInstrumentCalibrationMapper" >
  <resultMap id="BaseResultMap" type="com.sliansoft.slianOA.dataaccess.model.OaInstrumentCalibration" >
    <id column="calibration_id" property="calibrationId" jdbcType="INTEGER" />
    <result column="instrument_id" property="instrumentId" jdbcType="INTEGER" />
    <result column="calibration_time" property="calibrationTime" jdbcType="TIMESTAMP" />
    <result column="calibration_content" property="calibrationContent" jdbcType="VARCHAR" />
    <result column="access_group" property="accessGroup" jdbcType="INTEGER" />
    <result column="amend_time" property="amendTime" jdbcType="TIMESTAMP" />
    <result column="amender" property="amender" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="creator" property="creator" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    calibration_id, instrument_id, calibration_time, calibration_content, access_group, 
    amend_time, amender, create_time, creator
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sliansoft.slianOA.dataaccess.model.OaInstrumentCalibrationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from oa_instrument_calibration
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from oa_instrument_calibration
    where calibration_id = #{calibrationId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from oa_instrument_calibration
    where calibration_id = #{calibrationId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sliansoft.slianOA.dataaccess.model.OaInstrumentCalibrationExample" >
    delete from oa_instrument_calibration
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sliansoft.slianOA.dataaccess.model.OaInstrumentCalibration" >
    insert into oa_instrument_calibration (calibration_id, instrument_id, calibration_time, 
      calibration_content, access_group, amend_time, 
      amender, create_time, creator
      )
    values (#{calibrationId,jdbcType=INTEGER}, #{instrumentId,jdbcType=INTEGER}, #{calibrationTime,jdbcType=TIMESTAMP}, 
      #{calibrationContent,jdbcType=VARCHAR}, #{accessGroup,jdbcType=INTEGER}, #{amendTime,jdbcType=TIMESTAMP}, 
      #{amender,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{creator,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sliansoft.slianOA.dataaccess.model.OaInstrumentCalibration" >
    insert into oa_instrument_calibration
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="calibrationId != null" >
        calibration_id,
      </if>
      <if test="instrumentId != null" >
        instrument_id,
      </if>
      <if test="calibrationTime != null" >
        calibration_time,
      </if>
      <if test="calibrationContent != null" >
        calibration_content,
      </if>
      <if test="accessGroup != null" >
        access_group,
      </if>
      <if test="amendTime != null" >
        amend_time,
      </if>
      <if test="amender != null" >
        amender,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="creator != null" >
        creator,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="calibrationId != null" >
        #{calibrationId,jdbcType=INTEGER},
      </if>
      <if test="instrumentId != null" >
        #{instrumentId,jdbcType=INTEGER},
      </if>
      <if test="calibrationTime != null" >
        #{calibrationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="calibrationContent != null" >
        #{calibrationContent,jdbcType=VARCHAR},
      </if>
      <if test="accessGroup != null" >
        #{accessGroup,jdbcType=INTEGER},
      </if>
      <if test="amendTime != null" >
        #{amendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amender != null" >
        #{amender,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
   <insert id="insertAndGetId" useGeneratedKeys="true" keyProperty="calibrationId" parameterType="com.sliansoft.slianOA.dataaccess.model.OaInstrumentCalibration" >
    insert into oa_instrument_calibration
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="calibrationId != null" >
        calibration_id,
      </if>
      <if test="instrumentId != null" >
        instrument_id,
      </if>
      <if test="calibrationTime != null" >
        calibration_time,
      </if>
      <if test="calibrationContent != null" >
        calibration_content,
      </if>
      <if test="accessGroup != null" >
        access_group,
      </if>
      <if test="amendTime != null" >
        amend_time,
      </if>
      <if test="amender != null" >
        amender,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="creator != null" >
        creator,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="calibrationId != null" >
        #{calibrationId,jdbcType=INTEGER},
      </if>
      <if test="instrumentId != null" >
        #{instrumentId,jdbcType=INTEGER},
      </if>
      <if test="calibrationTime != null" >
        #{calibrationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="calibrationContent != null" >
        #{calibrationContent,jdbcType=VARCHAR},
      </if>
      <if test="accessGroup != null" >
        #{accessGroup,jdbcType=INTEGER},
      </if>
      <if test="amendTime != null" >
        #{amendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amender != null" >
        #{amender,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sliansoft.slianOA.dataaccess.model.OaInstrumentCalibrationExample" resultType="java.lang.Integer" >
    select count(*) from oa_instrument_calibration
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update oa_instrument_calibration
    <set >
      <if test="record.calibrationId != null" >
        calibration_id = #{record.calibrationId,jdbcType=INTEGER},
      </if>
      <if test="record.instrumentId != null" >
        instrument_id = #{record.instrumentId,jdbcType=INTEGER},
      </if>
      <if test="record.calibrationTime != null" >
        calibration_time = #{record.calibrationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.calibrationContent != null" >
        calibration_content = #{record.calibrationContent,jdbcType=VARCHAR},
      </if>
      <if test="record.accessGroup != null" >
        access_group = #{record.accessGroup,jdbcType=INTEGER},
      </if>
      <if test="record.amendTime != null" >
        amend_time = #{record.amendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.amender != null" >
        amender = #{record.amender,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creator != null" >
        creator = #{record.creator,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update oa_instrument_calibration
    set calibration_id = #{record.calibrationId,jdbcType=INTEGER},
      instrument_id = #{record.instrumentId,jdbcType=INTEGER},
      calibration_time = #{record.calibrationTime,jdbcType=TIMESTAMP},
      calibration_content = #{record.calibrationContent,jdbcType=VARCHAR},
      access_group = #{record.accessGroup,jdbcType=INTEGER},
      amend_time = #{record.amendTime,jdbcType=TIMESTAMP},
      amender = #{record.amender,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      creator = #{record.creator,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sliansoft.slianOA.dataaccess.model.OaInstrumentCalibration" >
    update oa_instrument_calibration
    <set >
      <if test="instrumentId != null" >
        instrument_id = #{instrumentId,jdbcType=INTEGER},
      </if>
      <if test="calibrationTime != null" >
        calibration_time = #{calibrationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="calibrationContent != null" >
        calibration_content = #{calibrationContent,jdbcType=VARCHAR},
      </if>
      <if test="accessGroup != null" >
        access_group = #{accessGroup,jdbcType=INTEGER},
      </if>
      <if test="amendTime != null" >
        amend_time = #{amendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amender != null" >
        amender = #{amender,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=INTEGER},
      </if>
    </set>
    where calibration_id = #{calibrationId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sliansoft.slianOA.dataaccess.model.OaInstrumentCalibration" >
    update oa_instrument_calibration
    set instrument_id = #{instrumentId,jdbcType=INTEGER},
      calibration_time = #{calibrationTime,jdbcType=TIMESTAMP},
      calibration_content = #{calibrationContent,jdbcType=VARCHAR},
      access_group = #{accessGroup,jdbcType=INTEGER},
      amend_time = #{amendTime,jdbcType=TIMESTAMP},
      amender = #{amender,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=INTEGER}
    where calibration_id = #{calibrationId,jdbcType=INTEGER}
  </update>
  <resultMap id="selectPageResult" extends="BaseResultMap" type="com.sliansoft.slianOA.dataaccess.model.OaInstrumentCalibration" >
    <!--
<association property="" column="" javaType="">
   <id column="" property="" jdbcType="" />
   <result column="" property="" jdbcType="" />
 </association>
-->
  </resultMap>
  <sql id="select_by_page_outter_where_sql" >
      <if test="oredCriteria.size>0">     <if test="_parameter != null" > <include refid="Example_Where_Clause"/> </if>    and   </if>  <if test="oredCriteria.size==0">     where   </if> 
  </sql>
  <sql id="select_by_page_inner_where_and_orderby_sql" >
      <if test="oredCriteria.size>0">     <if test="_parameter != null" > <include refid="Example_Where_Clause"/> </if>  </if>   <if test="orderByClause != null">    order by ${orderByClause}   </if> 
  </sql>
  <sql id="select_by_page_outter_orderby_sql" >
       <if test="orderByClause != null">    order by ${orderByClause}   </if> 
  </sql>
  <select id="selectPage" resultMap="selectPageResult" parameterType="com.sliansoft.slianOA.dataaccess.model.OaInstrumentCalibrationExample" >
    select a.* from oa_instrument_calibration a where a.calibration_id in 
 (select top ${pageSize} calibration_id from oa_instrument_calibration 
<include refid="select_by_page_outter_where_sql"/> 
calibration_id not in (select top ${skipRecordCount} calibration_id from oa_instrument_calibration  
<include refid="select_by_page_inner_where_and_orderby_sql"/> 
 ) 
<include refid="select_by_page_outter_orderby_sql"/> 
)
  </select>
</mapper>