<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sliansoft.slianOA.dataaccess.dao.OaInstrumentMapper" >
  <resultMap id="BaseResultMap" type="com.sliansoft.slianOA.dataaccess.model.OaInstrument" >
    <id column="instrument_id" property="instrumentId" jdbcType="INTEGER" />
    <result column="instrument_name" property="instrumentName" jdbcType="VARCHAR" />
    <result column="instrument_code" property="instrumentCode" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="access_group" property="accessGroup" jdbcType="INTEGER" />
    <result column="amend_time" property="amendTime" jdbcType="TIMESTAMP" />
    <result column="amender" property="amender" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="creator" property="creator" jdbcType="INTEGER" />
    <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
    <result column="buy_date" property="buyDate" jdbcType="DATE" />
    <result column="calibration_time" property="calibrationTime" jdbcType="TIMESTAMP" />
    <result column="calibration_status" property="calibrationStatus" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    instrument_id, instrument_name, instrument_code, remark, access_group, amend_time, 
    amender, create_time, creator, is_delete, buy_date, calibration_time, calibration_status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sliansoft.slianOA.dataaccess.model.OaInstrumentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from oa_instrument
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from oa_instrument
    where instrument_id = #{instrumentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from oa_instrument
    where instrument_id = #{instrumentId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sliansoft.slianOA.dataaccess.model.OaInstrumentExample" >
    delete from oa_instrument
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sliansoft.slianOA.dataaccess.model.OaInstrument" >
    insert into oa_instrument (instrument_id, instrument_name, instrument_code, 
      remark, access_group, amend_time, 
      amender, create_time, creator, 
      is_delete, buy_date, calibration_time, 
      calibration_status)
    values (#{instrumentId,jdbcType=INTEGER}, #{instrumentName,jdbcType=VARCHAR}, #{instrumentCode,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{accessGroup,jdbcType=INTEGER}, #{amendTime,jdbcType=TIMESTAMP}, 
      #{amender,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{creator,jdbcType=INTEGER}, 
      #{isDelete,jdbcType=INTEGER}, #{buyDate,jdbcType=DATE}, #{calibrationTime,jdbcType=TIMESTAMP}, 
      #{calibrationStatus,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sliansoft.slianOA.dataaccess.model.OaInstrument" >
    insert into oa_instrument
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="instrumentId != null" >
        instrument_id,
      </if>
      <if test="instrumentName != null" >
        instrument_name,
      </if>
      <if test="instrumentCode != null" >
        instrument_code,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="accessGroup != null" >
        access_group,
      </if>
      <if test="amendTime != null" >
        amend_time,
      </if>
      <if test="amender != null" >
        amender,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="buyDate != null" >
        buy_date,
      </if>
      <if test="calibrationTime != null" >
        calibration_time,
      </if>
      <if test="calibrationStatus != null" >
        calibration_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="instrumentId != null" >
        #{instrumentId,jdbcType=INTEGER},
      </if>
      <if test="instrumentName != null" >
        #{instrumentName,jdbcType=VARCHAR},
      </if>
      <if test="instrumentCode != null" >
        #{instrumentCode,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="accessGroup != null" >
        #{accessGroup,jdbcType=INTEGER},
      </if>
      <if test="amendTime != null" >
        #{amendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amender != null" >
        #{amender,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="buyDate != null" >
        #{buyDate,jdbcType=DATE},
      </if>
      <if test="calibrationTime != null" >
        #{calibrationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="calibrationStatus != null" >
        #{calibrationStatus,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sliansoft.slianOA.dataaccess.model.OaInstrumentExample" resultType="java.lang.Integer" >
    select count(*) from oa_instrument
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update oa_instrument
    <set >
      <if test="record.instrumentId != null" >
        instrument_id = #{record.instrumentId,jdbcType=INTEGER},
      </if>
      <if test="record.instrumentName != null" >
        instrument_name = #{record.instrumentName,jdbcType=VARCHAR},
      </if>
      <if test="record.instrumentCode != null" >
        instrument_code = #{record.instrumentCode,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.accessGroup != null" >
        access_group = #{record.accessGroup,jdbcType=INTEGER},
      </if>
      <if test="record.amendTime != null" >
        amend_time = #{record.amendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.amender != null" >
        amender = #{record.amender,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creator != null" >
        creator = #{record.creator,jdbcType=INTEGER},
      </if>
      <if test="record.isDelete != null" >
        is_delete = #{record.isDelete,jdbcType=INTEGER},
      </if>
      <if test="record.buyDate != null" >
        buy_date = #{record.buyDate,jdbcType=DATE},
      </if>
      <if test="record.calibrationTime != null" >
        calibration_time = #{record.calibrationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.calibrationStatus != null" >
        calibration_status = #{record.calibrationStatus,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update oa_instrument
    set instrument_id = #{record.instrumentId,jdbcType=INTEGER},
      instrument_name = #{record.instrumentName,jdbcType=VARCHAR},
      instrument_code = #{record.instrumentCode,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      access_group = #{record.accessGroup,jdbcType=INTEGER},
      amend_time = #{record.amendTime,jdbcType=TIMESTAMP},
      amender = #{record.amender,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      creator = #{record.creator,jdbcType=INTEGER},
      is_delete = #{record.isDelete,jdbcType=INTEGER},
      buy_date = #{record.buyDate,jdbcType=DATE},
      calibration_time = #{record.calibrationTime,jdbcType=TIMESTAMP},
      calibration_status = #{record.calibrationStatus,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sliansoft.slianOA.dataaccess.model.OaInstrument" >
    update oa_instrument
    <set >
      <if test="instrumentName != null" >
        instrument_name = #{instrumentName,jdbcType=VARCHAR},
      </if>
      <if test="instrumentCode != null" >
        instrument_code = #{instrumentCode,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="accessGroup != null" >
        access_group = #{accessGroup,jdbcType=INTEGER},
      </if>
      <if test="amendTime != null" >
        amend_time = #{amendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amender != null" >
        amender = #{amender,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="buyDate != null" >
        buy_date = #{buyDate,jdbcType=DATE},
      </if>
      <if test="calibrationTime != null" >
        calibration_time = #{calibrationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="calibrationStatus != null" >
        calibration_status = #{calibrationStatus,jdbcType=VARCHAR},
      </if>
    </set>
    where instrument_id = #{instrumentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sliansoft.slianOA.dataaccess.model.OaInstrument" >
    update oa_instrument
    set instrument_name = #{instrumentName,jdbcType=VARCHAR},
      instrument_code = #{instrumentCode,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      access_group = #{accessGroup,jdbcType=INTEGER},
      amend_time = #{amendTime,jdbcType=TIMESTAMP},
      amender = #{amender,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=INTEGER},
      buy_date = #{buyDate,jdbcType=DATE},
      calibration_time = #{calibrationTime,jdbcType=TIMESTAMP},
      calibration_status = #{calibrationStatus,jdbcType=VARCHAR}
    where instrument_id = #{instrumentId,jdbcType=INTEGER}
  </update>
  <resultMap id="selectPageResult" extends="BaseResultMap" type="com.sliansoft.slianOA.dataaccess.model.OaInstrument" >
    <!--
<association property="" column="" javaType="">
   <id column="" property="" jdbcType="" />
   <result column="" property="" jdbcType="" />
 </association>
-->
  </resultMap>
  <sql id="select_by_page_outter_where_sql" >
      <if test="oredCriteria.size>0">     <if test="_parameter != null" > <include refid="Example_Where_Clause"/> </if>   ) and   </if>  <if test="oredCriteria.size==0">     where   </if> 
  </sql>
  <sql id="select_by_page_inner_where_and_orderby_sql" >
      <if test="oredCriteria.size>0">     <if test="_parameter != null" > <include refid="Example_Where_Clause"/> </if>  </if>   <if test="orderByClause != null">    order by ${orderByClause}   </if> 
  </sql>
  <sql id="select_by_page_outter_orderby_sql" >
       <if test="orderByClause != null">    order by ${orderByClause}   </if> 
  </sql>
  <select id="selectPage" resultMap="selectPageResult" parameterType="com.sliansoft.slianOA.dataaccess.model.OaInstrumentExample" >
    select a.* from oa_instrument a where a.instrument_id in 
 (select top ${pageSize} instrument_id from oa_instrument 
<include refid="select_by_page_outter_where_sql"/> 
instrument_id not in (select top ${skipRecordCount} instrument_id from oa_instrument  
<include refid="select_by_page_inner_where_and_orderby_sql"/> 
 ) 
<include refid="select_by_page_outter_orderby_sql"/> 

  </select>
</mapper>