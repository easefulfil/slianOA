<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sliansoft.slianOA.dataaccess.dao.OaMeetingTrainMapper" >
  <resultMap id="BaseResultMap" type="com.sliansoft.slianOA.dataaccess.model.OaMeetingTrain" >
    <id column="meeting_train_id" property="meetingTrainId" jdbcType="INTEGER" />
    <result column="employee_id" property="employeeId" jdbcType="INTEGER" />
    <result column="mt_numbers" property="mtNumbers" jdbcType="VARCHAR" />
    <result column="mt_site" property="mtSite" jdbcType="VARCHAR" />
    <result column="mt_time" property="mtTime" jdbcType="TIMESTAMP" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="mt_join_persons" property="mtJoinPersons" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="view_employee_ids" property="viewEmployeeIds" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="access_group" property="accessGroup" jdbcType="INTEGER" />
    <result column="amend_time" property="amendTime" jdbcType="TIMESTAMP" />
    <result column="amender" property="amender" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="creator" property="creator" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.sliansoft.slianOA.dataaccess.model.OaMeetingTrain" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    meeting_train_id, employee_id, mt_numbers, mt_site, mt_time, title, mt_join_persons, 
    type, view_employee_ids, remark, status, access_group, amend_time, amender, create_time, 
    creator
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.sliansoft.slianOA.dataaccess.model.OaMeetingTrainExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from oa_meeting_train
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sliansoft.slianOA.dataaccess.model.OaMeetingTrainExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from oa_meeting_train
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from oa_meeting_train
    where meeting_train_id = #{meetingTrainId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from oa_meeting_train
    where meeting_train_id = #{meetingTrainId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sliansoft.slianOA.dataaccess.model.OaMeetingTrainExample" >
    delete from oa_meeting_train
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sliansoft.slianOA.dataaccess.model.OaMeetingTrain" useGeneratedKeys="true" keyProperty="meetingTrainId">
    insert into oa_meeting_train (meeting_train_id, employee_id, mt_numbers, 
      mt_site, mt_time, title, 
      mt_join_persons, type, view_employee_ids, 
      remark, status, access_group, 
      amend_time, amender, create_time, 
      creator, content)
    values (#{meetingTrainId,jdbcType=INTEGER}, #{employeeId,jdbcType=INTEGER}, #{mtNumbers,jdbcType=VARCHAR}, 
      #{mtSite,jdbcType=VARCHAR}, #{mtTime,jdbcType=TIMESTAMP}, #{title,jdbcType=VARCHAR}, 
      #{mtJoinPersons,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{viewEmployeeIds,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{accessGroup,jdbcType=INTEGER}, 
      #{amendTime,jdbcType=TIMESTAMP}, #{amender,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{creator,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sliansoft.slianOA.dataaccess.model.OaMeetingTrain"  useGeneratedKeys="true" keyProperty="meetingTrainId">
    insert into oa_meeting_train
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="meetingTrainId != null" >
        meeting_train_id,
      </if>
      <if test="employeeId != null" >
        employee_id,
      </if>
      <if test="mtNumbers != null" >
        mt_numbers,
      </if>
      <if test="mtSite != null" >
        mt_site,
      </if>
      <if test="mtTime != null" >
        mt_time,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="mtJoinPersons != null" >
        mt_join_persons,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="viewEmployeeIds != null" >
        view_employee_ids,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="accessGroup != null" >
        access_group,
      </if>
      <if test="amendTime != null" >
        amend_time,
      </if>
      <if test="amender != null" >
        amender,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="meetingTrainId != null" >
        #{meetingTrainId,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null" >
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="mtNumbers != null" >
        #{mtNumbers,jdbcType=VARCHAR},
      </if>
      <if test="mtSite != null" >
        #{mtSite,jdbcType=VARCHAR},
      </if>
      <if test="mtTime != null" >
        #{mtTime,jdbcType=TIMESTAMP},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="mtJoinPersons != null" >
        #{mtJoinPersons,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="viewEmployeeIds != null" >
        #{viewEmployeeIds,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="accessGroup != null" >
        #{accessGroup,jdbcType=INTEGER},
      </if>
      <if test="amendTime != null" >
        #{amendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amender != null" >
        #{amender,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sliansoft.slianOA.dataaccess.model.OaMeetingTrainExample" resultType="java.lang.Integer" >
    select count(*) from oa_meeting_train
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update oa_meeting_train
    <set >
      <if test="record.meetingTrainId != null" >
        meeting_train_id = #{record.meetingTrainId,jdbcType=INTEGER},
      </if>
      <if test="record.employeeId != null" >
        employee_id = #{record.employeeId,jdbcType=INTEGER},
      </if>
      <if test="record.mtNumbers != null" >
        mt_numbers = #{record.mtNumbers,jdbcType=VARCHAR},
      </if>
      <if test="record.mtSite != null" >
        mt_site = #{record.mtSite,jdbcType=VARCHAR},
      </if>
      <if test="record.mtTime != null" >
        mt_time = #{record.mtTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.mtJoinPersons != null" >
        mt_join_persons = #{record.mtJoinPersons,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.viewEmployeeIds != null" >
        view_employee_ids = #{record.viewEmployeeIds,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.accessGroup != null" >
        access_group = #{record.accessGroup,jdbcType=INTEGER},
      </if>
      <if test="record.amendTime != null" >
        amend_time = #{record.amendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.amender != null" >
        amender = #{record.amender,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creator != null" >
        creator = #{record.creator,jdbcType=INTEGER},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update oa_meeting_train
    set meeting_train_id = #{record.meetingTrainId,jdbcType=INTEGER},
      employee_id = #{record.employeeId,jdbcType=INTEGER},
      mt_numbers = #{record.mtNumbers,jdbcType=VARCHAR},
      mt_site = #{record.mtSite,jdbcType=VARCHAR},
      mt_time = #{record.mtTime,jdbcType=TIMESTAMP},
      title = #{record.title,jdbcType=VARCHAR},
      mt_join_persons = #{record.mtJoinPersons,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      view_employee_ids = #{record.viewEmployeeIds,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      access_group = #{record.accessGroup,jdbcType=INTEGER},
      amend_time = #{record.amendTime,jdbcType=TIMESTAMP},
      amender = #{record.amender,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      creator = #{record.creator,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update oa_meeting_train
    set meeting_train_id = #{record.meetingTrainId,jdbcType=INTEGER},
      employee_id = #{record.employeeId,jdbcType=INTEGER},
      mt_numbers = #{record.mtNumbers,jdbcType=VARCHAR},
      mt_site = #{record.mtSite,jdbcType=VARCHAR},
      mt_time = #{record.mtTime,jdbcType=TIMESTAMP},
      title = #{record.title,jdbcType=VARCHAR},
      mt_join_persons = #{record.mtJoinPersons,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      view_employee_ids = #{record.viewEmployeeIds,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      access_group = #{record.accessGroup,jdbcType=INTEGER},
      amend_time = #{record.amendTime,jdbcType=TIMESTAMP},
      amender = #{record.amender,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      creator = #{record.creator,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sliansoft.slianOA.dataaccess.model.OaMeetingTrain" >
    update oa_meeting_train
    <set >
      <if test="employeeId != null" >
        employee_id = #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="mtNumbers != null" >
        mt_numbers = #{mtNumbers,jdbcType=VARCHAR},
      </if>
      <if test="mtSite != null" >
        mt_site = #{mtSite,jdbcType=VARCHAR},
      </if>
      <if test="mtTime != null" >
        mt_time = #{mtTime,jdbcType=TIMESTAMP},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="mtJoinPersons != null" >
        mt_join_persons = #{mtJoinPersons,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="viewEmployeeIds != null" >
        view_employee_ids = #{viewEmployeeIds,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="accessGroup != null" >
        access_group = #{accessGroup,jdbcType=INTEGER},
      </if>
      <if test="amendTime != null" >
        amend_time = #{amendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amender != null" >
        amender = #{amender,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where meeting_train_id = #{meetingTrainId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.sliansoft.slianOA.dataaccess.model.OaMeetingTrain" >
    update oa_meeting_train
    set employee_id = #{employeeId,jdbcType=INTEGER},
      mt_numbers = #{mtNumbers,jdbcType=VARCHAR},
      mt_site = #{mtSite,jdbcType=VARCHAR},
      mt_time = #{mtTime,jdbcType=TIMESTAMP},
      title = #{title,jdbcType=VARCHAR},
      mt_join_persons = #{mtJoinPersons,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      view_employee_ids = #{viewEmployeeIds,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      access_group = #{accessGroup,jdbcType=INTEGER},
      amend_time = #{amendTime,jdbcType=TIMESTAMP},
      amender = #{amender,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where meeting_train_id = #{meetingTrainId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sliansoft.slianOA.dataaccess.model.OaMeetingTrain" >
    update oa_meeting_train
    set employee_id = #{employeeId,jdbcType=INTEGER},
      mt_numbers = #{mtNumbers,jdbcType=VARCHAR},
      mt_site = #{mtSite,jdbcType=VARCHAR},
      mt_time = #{mtTime,jdbcType=TIMESTAMP},
      title = #{title,jdbcType=VARCHAR},
      mt_join_persons = #{mtJoinPersons,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      view_employee_ids = #{viewEmployeeIds,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      access_group = #{accessGroup,jdbcType=INTEGER},
      amend_time = #{amendTime,jdbcType=TIMESTAMP},
      amender = #{amender,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=INTEGER}
    where meeting_train_id = #{meetingTrainId,jdbcType=INTEGER}
  </update>
  <resultMap id="selectPageResult" extends="BaseResultMap" type="com.sliansoft.slianOA.dataaccess.model.OaMeetingTrain" >
    <!--
<association property="" column="" javaType="">
   <id column="" property="" jdbcType="" />
   <result column="" property="" jdbcType="" />
 </association>
-->
  </resultMap>
  <sql id="select_by_page_outter_where_sql" >
      <if test="oredCriteria.size>0">     <if test="_parameter != null" > <include refid="Example_Where_Clause"/> </if>    and   </if>  <if test="oredCriteria.size==0">     where   </if> 
  </sql>
  <sql id="select_by_page_inner_where_and_orderby_sql" >
      <if test="oredCriteria.size>0">     <if test="_parameter != null" > <include refid="Example_Where_Clause"/> </if>  </if>   <if test="orderByClause != null">    order by ${orderByClause}   </if> 
  </sql>
  <sql id="select_by_page_outter_orderby_sql" >
       <if test="orderByClause != null">    order by ${orderByClause}   </if> 
  </sql>
  <select id="selectPage" resultMap="selectPageResult" parameterType="com.sliansoft.slianOA.dataaccess.model.OaMeetingTrainExample" >
    select a.* from oa_meeting_train a where a.meeting_train_id in 
 (select top ${pageSize} meeting_train_id from oa_meeting_train 
<include refid="select_by_page_outter_where_sql"/> 
meeting_train_id not in (select top ${skipRecordCount} meeting_train_id from oa_meeting_train  
<include refid="select_by_page_inner_where_and_orderby_sql"/> 
 ) 
<include refid="select_by_page_outter_orderby_sql"/> 
)
<include refid="select_by_page_outter_orderby_sql"/> 
  </select>
</mapper>