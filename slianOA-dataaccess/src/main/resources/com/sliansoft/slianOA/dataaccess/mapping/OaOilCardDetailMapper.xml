<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sliansoft.slianOA.dataaccess.dao.OaOilCardDetailMapper" >
  <resultMap id="BaseResultMap" type="com.sliansoft.slianOA.dataaccess.model.OaOilCardDetail" >
    <id column="oil_card_detail_id" property="oilCardDetailId" jdbcType="INTEGER" />
    <result column="vehicle_id" property="vehicleId" jdbcType="INTEGER" />
    <result column="oil_card_id" property="oilCardId" jdbcType="INTEGER" />
    <result column="employee_id" property="employeeId" jdbcType="INTEGER" />
    <result column="ocd_amount" property="ocdAmount" jdbcType="DOUBLE" />
    <result column="ocd_style" property="ocdStyle" jdbcType="VARCHAR" />
    <result column="ocd_par_time" property="ocdParTime" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="access_group" property="accessGroup" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="creator" property="creator" jdbcType="INTEGER" />
    <result column="amend_time" property="amendTime" jdbcType="TIMESTAMP" />
    <result column="amender" property="amender" jdbcType="INTEGER" />
    <result column="view_employee_ids" property="viewEmployeeIds" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.sliansoft.slianOA.dataaccess.model.OaOilCardDetail" extends="BaseResultMap" >
    <result column="is_delete" property="isDelete" jdbcType="BINARY" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    oil_card_detail_id, vehicle_id, oil_card_id, employee_id, ocd_amount, ocd_style, 
    ocd_par_time, remark, access_group, create_time, creator, amend_time, amender, view_employee_ids
  </sql>
  <sql id="Blob_Column_List" >
    is_delete
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.sliansoft.slianOA.dataaccess.model.OaOilCardDetailExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from oa_oil_card_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sliansoft.slianOA.dataaccess.model.OaOilCardDetailExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from oa_oil_card_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from oa_oil_card_detail
    where oil_card_detail_id = #{oilCardDetailId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from oa_oil_card_detail
    where oil_card_detail_id = #{oilCardDetailId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sliansoft.slianOA.dataaccess.model.OaOilCardDetailExample" >
    delete from oa_oil_card_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sliansoft.slianOA.dataaccess.model.OaOilCardDetail" >
    insert into oa_oil_card_detail (oil_card_detail_id, vehicle_id, oil_card_id, 
      employee_id, ocd_amount, ocd_style, 
      ocd_par_time, remark, access_group, 
      create_time, creator, amend_time, 
      amender, view_employee_ids, is_delete
      )
    values (#{oilCardDetailId,jdbcType=INTEGER}, #{vehicleId,jdbcType=INTEGER}, #{oilCardId,jdbcType=INTEGER}, 
      #{employeeId,jdbcType=INTEGER}, #{ocdAmount,jdbcType=DOUBLE}, #{ocdStyle,jdbcType=VARCHAR}, 
      #{ocdParTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, #{accessGroup,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{creator,jdbcType=INTEGER}, #{amendTime,jdbcType=TIMESTAMP}, 
      #{amender,jdbcType=INTEGER}, #{viewEmployeeIds,jdbcType=VARCHAR}, #{isDelete,jdbcType=BINARY}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sliansoft.slianOA.dataaccess.model.OaOilCardDetail" >
    insert into oa_oil_card_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="oilCardDetailId != null" >
        oil_card_detail_id,
      </if>
      <if test="vehicleId != null" >
        vehicle_id,
      </if>
      <if test="oilCardId != null" >
        oil_card_id,
      </if>
      <if test="employeeId != null" >
        employee_id,
      </if>
      <if test="ocdAmount != null" >
        ocd_amount,
      </if>
      <if test="ocdStyle != null" >
        ocd_style,
      </if>
      <if test="ocdParTime != null" >
        ocd_par_time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="accessGroup != null" >
        access_group,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="amendTime != null" >
        amend_time,
      </if>
      <if test="amender != null" >
        amender,
      </if>
      <if test="viewEmployeeIds != null" >
        view_employee_ids,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="oilCardDetailId != null" >
        #{oilCardDetailId,jdbcType=INTEGER},
      </if>
      <if test="vehicleId != null" >
        #{vehicleId,jdbcType=INTEGER},
      </if>
      <if test="oilCardId != null" >
        #{oilCardId,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null" >
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="ocdAmount != null" >
        #{ocdAmount,jdbcType=DOUBLE},
      </if>
      <if test="ocdStyle != null" >
        #{ocdStyle,jdbcType=VARCHAR},
      </if>
      <if test="ocdParTime != null" >
        #{ocdParTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="accessGroup != null" >
        #{accessGroup,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=INTEGER},
      </if>
      <if test="amendTime != null" >
        #{amendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amender != null" >
        #{amender,jdbcType=INTEGER},
      </if>
      <if test="viewEmployeeIds != null" >
        #{viewEmployeeIds,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=BINARY},
      </if>
    </trim>
  </insert>
  <insert id="insertAndGetId" useGeneratedKeys="true" keyProperty="oilCardDetailId" parameterType="com.sliansoft.slianOA.dataaccess.model.OaOilCardDetail" >
    insert into oa_oil_card_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="oilCardDetailId != null" >
        oil_card_detail_id,
      </if>
      <if test="vehicleId != null" >
        vehicle_id,
      </if>
      <if test="oilCardId != null" >
        oil_card_id,
      </if>
      <if test="employeeId != null" >
        employee_id,
      </if>
      <if test="ocdAmount != null" >
        ocd_amount,
      </if>
      <if test="ocdStyle != null" >
        ocd_style,
      </if>
      <if test="ocdParTime != null" >
        ocd_par_time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="accessGroup != null" >
        access_group,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="amendTime != null" >
        amend_time,
      </if>
      <if test="amender != null" >
        amender,
      </if>
      <if test="viewEmployeeIds != null" >
        view_employee_ids,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="oilCardDetailId != null" >
        #{oilCardDetailId,jdbcType=INTEGER},
      </if>
      <if test="vehicleId != null" >
        #{vehicleId,jdbcType=INTEGER},
      </if>
      <if test="oilCardId != null" >
        #{oilCardId,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null" >
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="ocdAmount != null" >
        #{ocdAmount,jdbcType=DOUBLE},
      </if>
      <if test="ocdStyle != null" >
        #{ocdStyle,jdbcType=VARCHAR},
      </if>
      <if test="ocdParTime != null" >
        #{ocdParTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="accessGroup != null" >
        #{accessGroup,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=INTEGER},
      </if>
      <if test="amendTime != null" >
        #{amendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amender != null" >
        #{amender,jdbcType=INTEGER},
      </if>
      <if test="viewEmployeeIds != null" >
        #{viewEmployeeIds,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=BINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sliansoft.slianOA.dataaccess.model.OaOilCardDetailExample" resultType="java.lang.Integer" >
    select count(*) from oa_oil_card_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update oa_oil_card_detail
    <set >
      <if test="record.oilCardDetailId != null" >
        oil_card_detail_id = #{record.oilCardDetailId,jdbcType=INTEGER},
      </if>
      <if test="record.vehicleId != null" >
        vehicle_id = #{record.vehicleId,jdbcType=INTEGER},
      </if>
      <if test="record.oilCardId != null" >
        oil_card_id = #{record.oilCardId,jdbcType=INTEGER},
      </if>
      <if test="record.employeeId != null" >
        employee_id = #{record.employeeId,jdbcType=INTEGER},
      </if>
      <if test="record.ocdAmount != null" >
        ocd_amount = #{record.ocdAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.ocdStyle != null" >
        ocd_style = #{record.ocdStyle,jdbcType=VARCHAR},
      </if>
      <if test="record.ocdParTime != null" >
        ocd_par_time = #{record.ocdParTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.accessGroup != null" >
        access_group = #{record.accessGroup,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creator != null" >
        creator = #{record.creator,jdbcType=INTEGER},
      </if>
      <if test="record.amendTime != null" >
        amend_time = #{record.amendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.amender != null" >
        amender = #{record.amender,jdbcType=INTEGER},
      </if>
      <if test="record.viewEmployeeIds != null" >
        view_employee_ids = #{record.viewEmployeeIds,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelete != null" >
        is_delete = #{record.isDelete,jdbcType=BINARY},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update oa_oil_card_detail
    set oil_card_detail_id = #{record.oilCardDetailId,jdbcType=INTEGER},
      vehicle_id = #{record.vehicleId,jdbcType=INTEGER},
      oil_card_id = #{record.oilCardId,jdbcType=INTEGER},
      employee_id = #{record.employeeId,jdbcType=INTEGER},
      ocd_amount = #{record.ocdAmount,jdbcType=DOUBLE},
      ocd_style = #{record.ocdStyle,jdbcType=VARCHAR},
      ocd_par_time = #{record.ocdParTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR},
      access_group = #{record.accessGroup,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      creator = #{record.creator,jdbcType=INTEGER},
      amend_time = #{record.amendTime,jdbcType=TIMESTAMP},
      amender = #{record.amender,jdbcType=INTEGER},
      view_employee_ids = #{record.viewEmployeeIds,jdbcType=VARCHAR},
      is_delete = #{record.isDelete,jdbcType=BINARY}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update oa_oil_card_detail
    set oil_card_detail_id = #{record.oilCardDetailId,jdbcType=INTEGER},
      vehicle_id = #{record.vehicleId,jdbcType=INTEGER},
      oil_card_id = #{record.oilCardId,jdbcType=INTEGER},
      employee_id = #{record.employeeId,jdbcType=INTEGER},
      ocd_amount = #{record.ocdAmount,jdbcType=DOUBLE},
      ocd_style = #{record.ocdStyle,jdbcType=VARCHAR},
      ocd_par_time = #{record.ocdParTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR},
      access_group = #{record.accessGroup,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      creator = #{record.creator,jdbcType=INTEGER},
      amend_time = #{record.amendTime,jdbcType=TIMESTAMP},
      amender = #{record.amender,jdbcType=INTEGER},
      view_employee_ids = #{record.viewEmployeeIds,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sliansoft.slianOA.dataaccess.model.OaOilCardDetail" >
    update oa_oil_card_detail
    <set >
      <if test="vehicleId != null" >
        vehicle_id = #{vehicleId,jdbcType=INTEGER},
      </if>
      <if test="oilCardId != null" >
        oil_card_id = #{oilCardId,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null" >
        employee_id = #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="ocdAmount != null" >
        ocd_amount = #{ocdAmount,jdbcType=DOUBLE},
      </if>
      <if test="ocdStyle != null" >
        ocd_style = #{ocdStyle,jdbcType=VARCHAR},
      </if>
      <if test="ocdParTime != null" >
        ocd_par_time = #{ocdParTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="accessGroup != null" >
        access_group = #{accessGroup,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=INTEGER},
      </if>
      <if test="amendTime != null" >
        amend_time = #{amendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amender != null" >
        amender = #{amender,jdbcType=INTEGER},
      </if>
      <if test="viewEmployeeIds != null" >
        view_employee_ids = #{viewEmployeeIds,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=BINARY},
      </if>
    </set>
    where oil_card_detail_id = #{oilCardDetailId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.sliansoft.slianOA.dataaccess.model.OaOilCardDetail" >
    update oa_oil_card_detail
    set vehicle_id = #{vehicleId,jdbcType=INTEGER},
      oil_card_id = #{oilCardId,jdbcType=INTEGER},
      employee_id = #{employeeId,jdbcType=INTEGER},
      ocd_amount = #{ocdAmount,jdbcType=DOUBLE},
      ocd_style = #{ocdStyle,jdbcType=VARCHAR},
      ocd_par_time = #{ocdParTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      access_group = #{accessGroup,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=INTEGER},
      amend_time = #{amendTime,jdbcType=TIMESTAMP},
      amender = #{amender,jdbcType=INTEGER},
      view_employee_ids = #{viewEmployeeIds,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=BINARY}
    where oil_card_detail_id = #{oilCardDetailId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sliansoft.slianOA.dataaccess.model.OaOilCardDetail" >
    update oa_oil_card_detail
    set vehicle_id = #{vehicleId,jdbcType=INTEGER},
      oil_card_id = #{oilCardId,jdbcType=INTEGER},
      employee_id = #{employeeId,jdbcType=INTEGER},
      ocd_amount = #{ocdAmount,jdbcType=DOUBLE},
      ocd_style = #{ocdStyle,jdbcType=VARCHAR},
      ocd_par_time = #{ocdParTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      access_group = #{accessGroup,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=INTEGER},
      amend_time = #{amendTime,jdbcType=TIMESTAMP},
      amender = #{amender,jdbcType=INTEGER},
      view_employee_ids = #{viewEmployeeIds,jdbcType=VARCHAR}
    where oil_card_detail_id = #{oilCardDetailId,jdbcType=INTEGER}
  </update>
  <resultMap id="selectPageResult" extends="BaseResultMap" type="com.sliansoft.slianOA.dataaccess.model.OaOilCardDetail" >
    <!--
<association property="" column="" javaType="">
   <id column="" property="" jdbcType="" />
   <result column="" property="" jdbcType="" />
 </association>
-->
  </resultMap>
  <sql id="select_by_page_outter_where_sql" >
      <if test="oredCriteria.size>0">     <if test="_parameter != null" > <include refid="Example_Where_Clause"/> </if>    and   </if>  <if test="oredCriteria.size==0">     where   </if> 
  </sql>
  <sql id="select_by_page_inner_where_and_orderby_sql" >
      <if test="oredCriteria.size>0">     <if test="_parameter != null" > <include refid="Example_Where_Clause"/> </if>  </if>   <if test="orderByClause != null">    order by ${orderByClause}   </if> 
  </sql>
  <sql id="select_by_page_outter_orderby_sql" >
       <if test="orderByClause != null">    order by ${orderByClause}   </if> 
  </sql>
  <select id="selectPage" resultMap="selectPageResult" parameterType="com.sliansoft.slianOA.dataaccess.model.OaOilCardDetailExample" >
    select a.* from oa_oil_card_detail a where a.oil_card_detail_id in 
 (select top ${pageSize} oil_card_detail_id from oa_oil_card_detail 
<include refid="select_by_page_outter_where_sql"/> 
oil_card_detail_id not in (select top ${skipRecordCount} oil_card_detail_id from oa_oil_card_detail  
<include refid="select_by_page_inner_where_and_orderby_sql"/> 
 ) 
<include refid="select_by_page_outter_orderby_sql"/> 
)
  </select>
</mapper>