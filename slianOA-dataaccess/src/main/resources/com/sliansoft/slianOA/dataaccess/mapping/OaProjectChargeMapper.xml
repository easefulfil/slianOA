<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sliansoft.slianOA.dataaccess.dao.OaProjectChargeMapper" >
  <resultMap id="BaseResultMap" type="com.sliansoft.slianOA.dataaccess.model.OaProjectCharge" >
    <id column="project_charge_id" property="projectChargeId" jdbcType="INTEGER" />
    <result column="access_group" property="accessGroup" jdbcType="INTEGER" />
    <result column="amend_time" property="amendTime" jdbcType="TIMESTAMP" />
    <result column="creator" property="creator" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="amender" property="amender" jdbcType="INTEGER" />
    <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
    <result column="charge_date" property="chargeDate" jdbcType="TIMESTAMP" />
    <result column="charge_money" property="chargeMoney" jdbcType="DECIMAL" />
    <result column="project_id" property="projectId" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="charge_status" property="chargeStatus" jdbcType="VARCHAR" />
    <result column="fact_date" property="factDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    project_charge_id, access_group, amend_time, creator, create_time, amender, is_delete, 
    charge_date, charge_money, project_id, remark, charge_status, fact_date
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sliansoft.slianOA.dataaccess.model.OaProjectChargeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from oa_project_charge
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from oa_project_charge
    where project_charge_id = #{projectChargeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from oa_project_charge
    where project_charge_id = #{projectChargeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sliansoft.slianOA.dataaccess.model.OaProjectChargeExample" >
    delete from oa_project_charge
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sliansoft.slianOA.dataaccess.model.OaProjectCharge" >
    insert into oa_project_charge (project_charge_id, access_group, amend_time, 
      creator, create_time, amender, 
      is_delete, charge_date, charge_money, 
      project_id, remark, charge_status, 
      fact_date)
    values (#{projectChargeId,jdbcType=INTEGER}, #{accessGroup,jdbcType=INTEGER}, #{amendTime,jdbcType=TIMESTAMP}, 
      #{creator,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{amender,jdbcType=INTEGER}, 
      #{isDelete,jdbcType=INTEGER}, #{chargeDate,jdbcType=TIMESTAMP}, #{chargeMoney,jdbcType=DECIMAL}, 
      #{projectId,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{chargeStatus,jdbcType=VARCHAR}, 
      #{factDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.sliansoft.slianOA.dataaccess.model.OaProjectCharge" >
    insert into oa_project_charge
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="projectChargeId != null" >
        project_charge_id,
      </if>
      <if test="accessGroup != null" >
        access_group,
      </if>
      <if test="amendTime != null" >
        amend_time,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="amender != null" >
        amender,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="chargeDate != null" >
        charge_date,
      </if>
      <if test="chargeMoney != null" >
        charge_money,
      </if>
      <if test="projectId != null" >
        project_id,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="chargeStatus != null" >
        charge_status,
      </if>
      <if test="factDate != null" >
        fact_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="projectChargeId != null" >
        #{projectChargeId,jdbcType=INTEGER},
      </if>
      <if test="accessGroup != null" >
        #{accessGroup,jdbcType=INTEGER},
      </if>
      <if test="amendTime != null" >
        #{amendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amender != null" >
        #{amender,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="chargeDate != null" >
        #{chargeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="chargeMoney != null" >
        #{chargeMoney,jdbcType=DECIMAL},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="chargeStatus != null" >
        #{chargeStatus,jdbcType=VARCHAR},
      </if>
      <if test="factDate != null" >
        #{factDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sliansoft.slianOA.dataaccess.model.OaProjectChargeExample" resultType="java.lang.Integer" >
    select count(*) from oa_project_charge
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update oa_project_charge
    <set >
      <if test="record.projectChargeId != null" >
        project_charge_id = #{record.projectChargeId,jdbcType=INTEGER},
      </if>
      <if test="record.accessGroup != null" >
        access_group = #{record.accessGroup,jdbcType=INTEGER},
      </if>
      <if test="record.amendTime != null" >
        amend_time = #{record.amendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creator != null" >
        creator = #{record.creator,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.amender != null" >
        amender = #{record.amender,jdbcType=INTEGER},
      </if>
      <if test="record.isDelete != null" >
        is_delete = #{record.isDelete,jdbcType=INTEGER},
      </if>
      <if test="record.chargeDate != null" >
        charge_date = #{record.chargeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.chargeMoney != null" >
        charge_money = #{record.chargeMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.projectId != null" >
        project_id = #{record.projectId,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.chargeStatus != null" >
        charge_status = #{record.chargeStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.factDate != null" >
        fact_date = #{record.factDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update oa_project_charge
    set project_charge_id = #{record.projectChargeId,jdbcType=INTEGER},
      access_group = #{record.accessGroup,jdbcType=INTEGER},
      amend_time = #{record.amendTime,jdbcType=TIMESTAMP},
      creator = #{record.creator,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      amender = #{record.amender,jdbcType=INTEGER},
      is_delete = #{record.isDelete,jdbcType=INTEGER},
      charge_date = #{record.chargeDate,jdbcType=TIMESTAMP},
      charge_money = #{record.chargeMoney,jdbcType=DECIMAL},
      project_id = #{record.projectId,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      charge_status = #{record.chargeStatus,jdbcType=VARCHAR},
      fact_date = #{record.factDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sliansoft.slianOA.dataaccess.model.OaProjectCharge" >
    update oa_project_charge
    <set >
      <if test="accessGroup != null" >
        access_group = #{accessGroup,jdbcType=INTEGER},
      </if>
      <if test="amendTime != null" >
        amend_time = #{amendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amender != null" >
        amender = #{amender,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="chargeDate != null" >
        charge_date = #{chargeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="chargeMoney != null" >
        charge_money = #{chargeMoney,jdbcType=DECIMAL},
      </if>
      <if test="projectId != null" >
        project_id = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="chargeStatus != null" >
        charge_status = #{chargeStatus,jdbcType=VARCHAR},
      </if>
      <if test="factDate != null" >
        fact_date = #{factDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where project_charge_id = #{projectChargeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sliansoft.slianOA.dataaccess.model.OaProjectCharge" >
    update oa_project_charge
    set access_group = #{accessGroup,jdbcType=INTEGER},
      amend_time = #{amendTime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      amender = #{amender,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=INTEGER},
      charge_date = #{chargeDate,jdbcType=TIMESTAMP},
      charge_money = #{chargeMoney,jdbcType=DECIMAL},
      project_id = #{projectId,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      charge_status = #{chargeStatus,jdbcType=VARCHAR},
      fact_date = #{factDate,jdbcType=TIMESTAMP}
    where project_charge_id = #{projectChargeId,jdbcType=INTEGER}
  </update>
  <resultMap id="selectPageResult" extends="BaseResultMap" type="com.sliansoft.slianOA.dataaccess.model.OaProjectCharge" >
    <!--
<association property="" column="" javaType="">
   <id column="" property="" jdbcType="" />
   <result column="" property="" jdbcType="" />
 </association>
-->
  </resultMap>
  <sql id="select_by_page_outter_where_sql" >
      <if test="oredCriteria.size>0">     <if test="_parameter != null" > <include refid="Example_Where_Clause"/> </if>   ) and   </if>  <if test="oredCriteria.size==0">     where   </if> 
  </sql>
  <sql id="select_by_page_inner_where_and_orderby_sql" >
      <if test="oredCriteria.size>0">     <if test="_parameter != null" > <include refid="Example_Where_Clause"/> </if>  </if>   <if test="orderByClause != null">    order by ${orderByClause}   </if> 
  </sql>
  <sql id="select_by_page_outter_orderby_sql" >
       <if test="orderByClause != null">    order by ${orderByClause}   </if> 
  </sql>
  <select id="selectPage" resultMap="selectPageResult" parameterType="com.sliansoft.slianOA.dataaccess.model.OaProjectChargeExample" >
    select a.* from oa_project_charge a where a.project_charge_id in 
 (select top ${pageSize} project_charge_id from oa_project_charge 
<include refid="select_by_page_outter_where_sql"/> 
project_charge_id not in (select top ${skipRecordCount} project_charge_id from oa_project_charge  
<include refid="select_by_page_inner_where_and_orderby_sql"/> 
 ) 
<include refid="select_by_page_outter_orderby_sql"/> 

  </select>
</mapper>