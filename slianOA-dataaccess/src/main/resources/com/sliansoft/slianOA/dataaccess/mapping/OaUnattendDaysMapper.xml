<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sliansoft.slianOA.dataaccess.dao.OaUnattendDaysMapper">
  <resultMap id="BaseResultMap" type="com.sliansoft.slianOA.dataaccess.model.OaUnattendDays">
    <id column="unattend_days_id" jdbcType="INTEGER" property="unattendDaysId" />
    <result column="unattend_reason" jdbcType="VARCHAR" property="unattendReason" />
    <result column="unattend_day" jdbcType="TIMESTAMP" property="unattendDay" />
    <result column="is_overdue" jdbcType="INTEGER" property="isOverdue" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="access_group" jdbcType="INTEGER" property="accessGroup" />
    <result column="amend_time" jdbcType="TIMESTAMP" property="amendTime" />
    <result column="amender" jdbcType="INTEGER" property="amender" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="creator" jdbcType="INTEGER" property="creator" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    unattend_days_id, unattend_reason, unattend_day, is_overdue, remark, access_group, 
    amend_time, amender, create_time, creator
  </sql>
  <select id="selectByExample" parameterType="com.sliansoft.slianOA.dataaccess.model.OaUnattendDaysExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from oa_unattend_days
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from oa_unattend_days
    where unattend_days_id = #{unattendDaysId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from oa_unattend_days
    where unattend_days_id = #{unattendDaysId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sliansoft.slianOA.dataaccess.model.OaUnattendDaysExample">
    delete from oa_unattend_days
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sliansoft.slianOA.dataaccess.model.OaUnattendDays">
    insert into oa_unattend_days (unattend_days_id, unattend_reason, unattend_day, 
      is_overdue, remark, access_group, 
      amend_time, amender, create_time, 
      creator)
    values (#{unattendDaysId,jdbcType=INTEGER}, #{unattendReason,jdbcType=VARCHAR}, #{unattendDay,jdbcType=TIMESTAMP}, 
      #{isOverdue,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{accessGroup,jdbcType=INTEGER}, 
      #{amendTime,jdbcType=TIMESTAMP}, #{amender,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{creator,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sliansoft.slianOA.dataaccess.model.OaUnattendDays">
    insert into oa_unattend_days
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="unattendDaysId != null">
        unattend_days_id,
      </if>
      <if test="unattendReason != null">
        unattend_reason,
      </if>
      <if test="unattendDay != null">
        unattend_day,
      </if>
      <if test="isOverdue != null">
        is_overdue,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="accessGroup != null">
        access_group,
      </if>
      <if test="amendTime != null">
        amend_time,
      </if>
      <if test="amender != null">
        amender,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="creator != null">
        creator,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="unattendDaysId != null">
        #{unattendDaysId,jdbcType=INTEGER},
      </if>
      <if test="unattendReason != null">
        #{unattendReason,jdbcType=VARCHAR},
      </if>
      <if test="unattendDay != null">
        #{unattendDay,jdbcType=TIMESTAMP},
      </if>
      <if test="isOverdue != null">
        #{isOverdue,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="accessGroup != null">
        #{accessGroup,jdbcType=INTEGER},
      </if>
      <if test="amendTime != null">
        #{amendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amender != null">
        #{amender,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sliansoft.slianOA.dataaccess.model.OaUnattendDaysExample" resultType="java.lang.Integer">
    select count(*) from oa_unattend_days
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update oa_unattend_days
    <set>
      <if test="record.unattendDaysId != null">
        unattend_days_id = #{record.unattendDaysId,jdbcType=INTEGER},
      </if>
      <if test="record.unattendReason != null">
        unattend_reason = #{record.unattendReason,jdbcType=VARCHAR},
      </if>
      <if test="record.unattendDay != null">
        unattend_day = #{record.unattendDay,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isOverdue != null">
        is_overdue = #{record.isOverdue,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.accessGroup != null">
        access_group = #{record.accessGroup,jdbcType=INTEGER},
      </if>
      <if test="record.amendTime != null">
        amend_time = #{record.amendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.amender != null">
        amender = #{record.amender,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update oa_unattend_days
    set unattend_days_id = #{record.unattendDaysId,jdbcType=INTEGER},
      unattend_reason = #{record.unattendReason,jdbcType=VARCHAR},
      unattend_day = #{record.unattendDay,jdbcType=TIMESTAMP},
      is_overdue = #{record.isOverdue,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      access_group = #{record.accessGroup,jdbcType=INTEGER},
      amend_time = #{record.amendTime,jdbcType=TIMESTAMP},
      amender = #{record.amender,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      creator = #{record.creator,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sliansoft.slianOA.dataaccess.model.OaUnattendDays">
    update oa_unattend_days
    <set>
      <if test="unattendReason != null">
        unattend_reason = #{unattendReason,jdbcType=VARCHAR},
      </if>
      <if test="unattendDay != null">
        unattend_day = #{unattendDay,jdbcType=TIMESTAMP},
      </if>
      <if test="isOverdue != null">
        is_overdue = #{isOverdue,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="accessGroup != null">
        access_group = #{accessGroup,jdbcType=INTEGER},
      </if>
      <if test="amendTime != null">
        amend_time = #{amendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amender != null">
        amender = #{amender,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=INTEGER},
      </if>
    </set>
    where unattend_days_id = #{unattendDaysId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sliansoft.slianOA.dataaccess.model.OaUnattendDays">
    update oa_unattend_days
    set unattend_reason = #{unattendReason,jdbcType=VARCHAR},
      unattend_day = #{unattendDay,jdbcType=TIMESTAMP},
      is_overdue = #{isOverdue,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      access_group = #{accessGroup,jdbcType=INTEGER},
      amend_time = #{amendTime,jdbcType=TIMESTAMP},
      amender = #{amender,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=INTEGER}
    where unattend_days_id = #{unattendDaysId,jdbcType=INTEGER}
  </update>
  <resultMap extends="BaseResultMap" id="selectPageResult" type="com.sliansoft.slianOA.dataaccess.model.OaUnattendDays">
    <!--
<association property="" column="" javaType="">
   <id column="" property="" jdbcType="" />
   <result column="" property="" jdbcType="" />
 </association>
-->
  </resultMap>
  <sql id="select_by_page_outter_where_sql">
      <if test="oredCriteria.size&gt;0">     <if test="_parameter != null"> <include refid="Example_Where_Clause" /> </if>    and   </if>  <if test="oredCriteria.size==0">     where   </if> 
  </sql>
  <sql id="select_by_page_inner_where_and_orderby_sql">
      <if test="oredCriteria.size&gt;0">     <if test="_parameter != null"> <include refid="Example_Where_Clause" /> </if>  </if>   <if test="orderByClause != null">    order by ${orderByClause}   </if> 
  </sql>
  <sql id="select_by_page_outter_orderby_sql">
       <if test="orderByClause != null">    order by ${orderByClause}   </if> 
  </sql>
  <select id="selectPage" parameterType="com.sliansoft.slianOA.dataaccess.model.OaUnattendDaysExample" resultMap="selectPageResult">
    select a.* from oa_unattend_days a where a.unattend_days_id in 
 (select top ${pageSize} unattend_days_id from oa_unattend_days 
<include refid="select_by_page_outter_where_sql" /> 
unattend_days_id not in (select top ${skipRecordCount} unattend_days_id from oa_unattend_days  
<include refid="select_by_page_inner_where_and_orderby_sql" /> 
 ) 
<include refid="select_by_page_outter_orderby_sql" /> 
)
  </select>
</mapper>