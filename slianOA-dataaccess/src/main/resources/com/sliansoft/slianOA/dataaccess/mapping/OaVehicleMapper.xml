<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sliansoft.slianOA.dataaccess.dao.OaVehicleMapper" >
  <resultMap id="BaseResultMap" type="com.sliansoft.slianOA.dataaccess.model.OaVehicle" >
    <id column="vehicle_id" property="vehicleId" jdbcType="INTEGER" />
    <result column="license_plate" property="licensePlate" jdbcType="VARCHAR" />
    <result column="trademark" property="trademark" jdbcType="VARCHAR" />
    <result column="colour" property="colour" jdbcType="VARCHAR" />
    <result column="engine_number" property="engineNumber" jdbcType="VARCHAR" />
    <result column="buy_time" property="buyTime" jdbcType="TIMESTAMP" />
    <result column="is_scrap" property="isScrap" jdbcType="VARCHAR" />
    <result column="is_out" property="isOut" jdbcType="VARCHAR" />
    <result column="is_available" property="isAvailable" jdbcType="VARCHAR" />
    <result column="view_employee_ids" property="viewEmployeeIds" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="access_group" property="accessGroup" jdbcType="INTEGER" />
    <result column="amend_time" property="amendTime" jdbcType="TIMESTAMP" />
    <result column="amender" property="amender" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="creator" property="creator" jdbcType="INTEGER" />
    <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
    <result column="begin_time" property="beginTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    vehicle_id, license_plate, trademark, colour, engine_number, buy_time, is_scrap, 
    is_out, is_available, view_employee_ids, status, remark, access_group, amend_time, 
    amender, create_time, creator, is_delete, begin_time, end_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sliansoft.slianOA.dataaccess.model.OaVehicleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from oa_vehicle
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from oa_vehicle
    where vehicle_id = #{vehicleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from oa_vehicle
    where vehicle_id = #{vehicleId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sliansoft.slianOA.dataaccess.model.OaVehicleExample" >
    delete from oa_vehicle
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sliansoft.slianOA.dataaccess.model.OaVehicle" >
    insert into oa_vehicle (vehicle_id, license_plate, trademark, 
      colour, engine_number, buy_time, 
      is_scrap, is_out, is_available, 
      view_employee_ids, status, remark, 
      access_group, amend_time, amender, 
      create_time, creator, is_delete, 
      begin_time, end_time)
    values (#{vehicleId,jdbcType=INTEGER}, #{licensePlate,jdbcType=VARCHAR}, #{trademark,jdbcType=VARCHAR}, 
      #{colour,jdbcType=VARCHAR}, #{engineNumber,jdbcType=VARCHAR}, #{buyTime,jdbcType=TIMESTAMP}, 
      #{isScrap,jdbcType=VARCHAR}, #{isOut,jdbcType=VARCHAR}, #{isAvailable,jdbcType=VARCHAR}, 
      #{viewEmployeeIds,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{accessGroup,jdbcType=INTEGER}, #{amendTime,jdbcType=TIMESTAMP}, #{amender,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{creator,jdbcType=INTEGER}, #{isDelete,jdbcType=INTEGER}, 
      #{beginTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.sliansoft.slianOA.dataaccess.model.OaVehicle" >
    insert into oa_vehicle
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="vehicleId != null" >
        vehicle_id,
      </if>
      <if test="licensePlate != null" >
        license_plate,
      </if>
      <if test="trademark != null" >
        trademark,
      </if>
      <if test="colour != null" >
        colour,
      </if>
      <if test="engineNumber != null" >
        engine_number,
      </if>
      <if test="buyTime != null" >
        buy_time,
      </if>
      <if test="isScrap != null" >
        is_scrap,
      </if>
      <if test="isOut != null" >
        is_out,
      </if>
      <if test="isAvailable != null" >
        is_available,
      </if>
      <if test="viewEmployeeIds != null" >
        view_employee_ids,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="accessGroup != null" >
        access_group,
      </if>
      <if test="amendTime != null" >
        amend_time,
      </if>
      <if test="amender != null" >
        amender,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="beginTime != null" >
        begin_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="vehicleId != null" >
        #{vehicleId,jdbcType=INTEGER},
      </if>
      <if test="licensePlate != null" >
        #{licensePlate,jdbcType=VARCHAR},
      </if>
      <if test="trademark != null" >
        #{trademark,jdbcType=VARCHAR},
      </if>
      <if test="colour != null" >
        #{colour,jdbcType=VARCHAR},
      </if>
      <if test="engineNumber != null" >
        #{engineNumber,jdbcType=VARCHAR},
      </if>
      <if test="buyTime != null" >
        #{buyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isScrap != null" >
        #{isScrap,jdbcType=VARCHAR},
      </if>
      <if test="isOut != null" >
        #{isOut,jdbcType=VARCHAR},
      </if>
      <if test="isAvailable != null" >
        #{isAvailable,jdbcType=VARCHAR},
      </if>
      <if test="viewEmployeeIds != null" >
        #{viewEmployeeIds,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="accessGroup != null" >
        #{accessGroup,jdbcType=INTEGER},
      </if>
      <if test="amendTime != null" >
        #{amendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amender != null" >
        #{amender,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="beginTime != null" >
        #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sliansoft.slianOA.dataaccess.model.OaVehicleExample" resultType="java.lang.Integer" >
    select count(*) from oa_vehicle
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update oa_vehicle
    <set >
      <if test="record.vehicleId != null" >
        vehicle_id = #{record.vehicleId,jdbcType=INTEGER},
      </if>
      <if test="record.licensePlate != null" >
        license_plate = #{record.licensePlate,jdbcType=VARCHAR},
      </if>
      <if test="record.trademark != null" >
        trademark = #{record.trademark,jdbcType=VARCHAR},
      </if>
      <if test="record.colour != null" >
        colour = #{record.colour,jdbcType=VARCHAR},
      </if>
      <if test="record.engineNumber != null" >
        engine_number = #{record.engineNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.buyTime != null" >
        buy_time = #{record.buyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isScrap != null" >
        is_scrap = #{record.isScrap,jdbcType=VARCHAR},
      </if>
      <if test="record.isOut != null" >
        is_out = #{record.isOut,jdbcType=VARCHAR},
      </if>
      <if test="record.isAvailable != null" >
        is_available = #{record.isAvailable,jdbcType=VARCHAR},
      </if>
      <if test="record.viewEmployeeIds != null" >
        view_employee_ids = #{record.viewEmployeeIds,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.accessGroup != null" >
        access_group = #{record.accessGroup,jdbcType=INTEGER},
      </if>
      <if test="record.amendTime != null" >
        amend_time = #{record.amendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.amender != null" >
        amender = #{record.amender,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creator != null" >
        creator = #{record.creator,jdbcType=INTEGER},
      </if>
      <if test="record.isDelete != null" >
        is_delete = #{record.isDelete,jdbcType=INTEGER},
      </if>
      <if test="record.beginTime != null" >
        begin_time = #{record.beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update oa_vehicle
    set vehicle_id = #{record.vehicleId,jdbcType=INTEGER},
      license_plate = #{record.licensePlate,jdbcType=VARCHAR},
      trademark = #{record.trademark,jdbcType=VARCHAR},
      colour = #{record.colour,jdbcType=VARCHAR},
      engine_number = #{record.engineNumber,jdbcType=VARCHAR},
      buy_time = #{record.buyTime,jdbcType=TIMESTAMP},
      is_scrap = #{record.isScrap,jdbcType=VARCHAR},
      is_out = #{record.isOut,jdbcType=VARCHAR},
      is_available = #{record.isAvailable,jdbcType=VARCHAR},
      view_employee_ids = #{record.viewEmployeeIds,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      access_group = #{record.accessGroup,jdbcType=INTEGER},
      amend_time = #{record.amendTime,jdbcType=TIMESTAMP},
      amender = #{record.amender,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      creator = #{record.creator,jdbcType=INTEGER},
      is_delete = #{record.isDelete,jdbcType=INTEGER},
      begin_time = #{record.beginTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sliansoft.slianOA.dataaccess.model.OaVehicle" >
    update oa_vehicle
    <set >
      <if test="licensePlate != null" >
        license_plate = #{licensePlate,jdbcType=VARCHAR},
      </if>
      <if test="trademark != null" >
        trademark = #{trademark,jdbcType=VARCHAR},
      </if>
      <if test="colour != null" >
        colour = #{colour,jdbcType=VARCHAR},
      </if>
      <if test="engineNumber != null" >
        engine_number = #{engineNumber,jdbcType=VARCHAR},
      </if>
      <if test="buyTime != null" >
        buy_time = #{buyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isScrap != null" >
        is_scrap = #{isScrap,jdbcType=VARCHAR},
      </if>
      <if test="isOut != null" >
        is_out = #{isOut,jdbcType=VARCHAR},
      </if>
      <if test="isAvailable != null" >
        is_available = #{isAvailable,jdbcType=VARCHAR},
      </if>
      <if test="viewEmployeeIds != null" >
        view_employee_ids = #{viewEmployeeIds,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="accessGroup != null" >
        access_group = #{accessGroup,jdbcType=INTEGER},
      </if>
      <if test="amendTime != null" >
        amend_time = #{amendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amender != null" >
        amender = #{amender,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="beginTime != null" >
        begin_time = #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where vehicle_id = #{vehicleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sliansoft.slianOA.dataaccess.model.OaVehicle" >
    update oa_vehicle
    set license_plate = #{licensePlate,jdbcType=VARCHAR},
      trademark = #{trademark,jdbcType=VARCHAR},
      colour = #{colour,jdbcType=VARCHAR},
      engine_number = #{engineNumber,jdbcType=VARCHAR},
      buy_time = #{buyTime,jdbcType=TIMESTAMP},
      is_scrap = #{isScrap,jdbcType=VARCHAR},
      is_out = #{isOut,jdbcType=VARCHAR},
      is_available = #{isAvailable,jdbcType=VARCHAR},
      view_employee_ids = #{viewEmployeeIds,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      access_group = #{accessGroup,jdbcType=INTEGER},
      amend_time = #{amendTime,jdbcType=TIMESTAMP},
      amender = #{amender,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=INTEGER},
      begin_time = #{beginTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP}
    where vehicle_id = #{vehicleId,jdbcType=INTEGER}
  </update>
  <resultMap id="selectPageResult" extends="BaseResultMap" type="com.sliansoft.slianOA.dataaccess.model.OaVehicle" >
    <!--
<association property="" column="" javaType="">
   <id column="" property="" jdbcType="" />
   <result column="" property="" jdbcType="" />
 </association>
-->
  </resultMap>
  <sql id="select_by_page_outter_where_sql" >
      <if test="oredCriteria.size>0">     <if test="_parameter != null" > <include refid="Example_Where_Clause"/> </if>    and   </if>  <if test="oredCriteria.size==0">     where   </if> 
  </sql>
  <sql id="select_by_page_inner_where_and_orderby_sql" >
      <if test="oredCriteria.size>0">     <if test="_parameter != null" > <include refid="Example_Where_Clause"/> </if>  </if>   <if test="orderByClause != null">    order by ${orderByClause}   </if> 
  </sql>
  <sql id="select_by_page_outter_orderby_sql" >
       <if test="orderByClause != null">    order by ${orderByClause}   </if> 
  </sql>
  <select id="selectPage" resultMap="selectPageResult" parameterType="com.sliansoft.slianOA.dataaccess.model.OaVehicleExample" >
    select a.* from oa_vehicle a where a.vehicle_id in 
 (select top ${pageSize} vehicle_id from oa_vehicle 
<include refid="select_by_page_outter_where_sql"/> 
vehicle_id not in (select top ${skipRecordCount} vehicle_id from oa_vehicle  
<include refid="select_by_page_inner_where_and_orderby_sql"/> 
 ) 
<include refid="select_by_page_outter_orderby_sql"/> 
)
  </select>
</mapper>