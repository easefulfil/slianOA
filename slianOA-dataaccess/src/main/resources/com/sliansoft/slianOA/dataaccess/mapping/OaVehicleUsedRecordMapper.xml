<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sliansoft.slianOA.dataaccess.dao.OaVehicleUsedRecordMapper" >
  <resultMap id="BaseResultMap" type="com.sliansoft.slianOA.dataaccess.model.OaVehicleUsedRecord" >
    <id column="vehicle_used_record_id" property="vehicleUsedRecordId" jdbcType="INTEGER" />
    <result column="vehicle_id" property="vehicleId" jdbcType="INTEGER" />
    <result column="employee_id" property="employeeId" jdbcType="INTEGER" />
    <result column="begin_time" property="beginTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="plan_return_time" property="planReturnTime" jdbcType="TIMESTAMP" />
    <result column="true_return_time" property="trueReturnTime" jdbcType="TIMESTAMP" />
    <result column="vur_destination" property="vurDestination" jdbcType="VARCHAR" />
    <result column="vur_together" property="vurTogether" jdbcType="VARCHAR" />
    <result column="vur_report_site" property="vurReportSite" jdbcType="VARCHAR" />
    <result column="vur_linkman" property="vurLinkman" jdbcType="VARCHAR" />
    <result column="telephone" property="telephone" jdbcType="VARCHAR" />
    <result column="assignment" property="assignment" jdbcType="VARCHAR" />
    <result column="begin_vel_mileage" property="beginVelMileage" jdbcType="DOUBLE" />
    <result column="return_vel_mileage" property="returnVelMileage" jdbcType="DOUBLE" />
    <result column="true_out_time" property="trueOutTime" jdbcType="TIMESTAMP" />
    <result column="pre_events" property="preEvents" jdbcType="VARCHAR" />
    <result column="is_readed" property="isReaded" jdbcType="VARCHAR" />
    <result column="view_employee_ids" property="viewEmployeeIds" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="access_group" property="accessGroup" jdbcType="INTEGER" />
    <result column="amend_time" property="amendTime" jdbcType="TIMESTAMP" />
    <result column="amender" property="amender" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="creator" property="creator" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="step" property="step" jdbcType="VARCHAR" />
    <result column="driver" property="driver" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    vehicle_used_record_id, vehicle_id, employee_id, begin_time, end_time, plan_return_time, 
    true_return_time, vur_destination, vur_together, vur_report_site, vur_linkman, telephone, 
    assignment, begin_vel_mileage, return_vel_mileage, true_out_time, pre_events, is_readed, 
    view_employee_ids, status, access_group, amend_time, amender, create_time, creator, 
    remark, step, driver, type
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sliansoft.slianOA.dataaccess.model.OaVehicleUsedRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from oa_vehicle_used_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from oa_vehicle_used_record
    where vehicle_used_record_id = #{vehicleUsedRecordId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from oa_vehicle_used_record
    where vehicle_used_record_id = #{vehicleUsedRecordId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sliansoft.slianOA.dataaccess.model.OaVehicleUsedRecordExample" >
    delete from oa_vehicle_used_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sliansoft.slianOA.dataaccess.model.OaVehicleUsedRecord" >
    insert into oa_vehicle_used_record (vehicle_used_record_id, vehicle_id, employee_id, 
      begin_time, end_time, plan_return_time, 
      true_return_time, vur_destination, vur_together, 
      vur_report_site, vur_linkman, telephone, 
      assignment, begin_vel_mileage, return_vel_mileage, 
      true_out_time, pre_events, is_readed, 
      view_employee_ids, status, access_group, 
      amend_time, amender, create_time, 
      creator, remark, step, 
      driver, type)
    values (#{vehicleUsedRecordId,jdbcType=INTEGER}, #{vehicleId,jdbcType=INTEGER}, #{employeeId,jdbcType=INTEGER}, 
      #{beginTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{planReturnTime,jdbcType=TIMESTAMP}, 
      #{trueReturnTime,jdbcType=TIMESTAMP}, #{vurDestination,jdbcType=VARCHAR}, #{vurTogether,jdbcType=VARCHAR}, 
      #{vurReportSite,jdbcType=VARCHAR}, #{vurLinkman,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, 
      #{assignment,jdbcType=VARCHAR}, #{beginVelMileage,jdbcType=DOUBLE}, #{returnVelMileage,jdbcType=DOUBLE}, 
      #{trueOutTime,jdbcType=TIMESTAMP}, #{preEvents,jdbcType=VARCHAR}, #{isReaded,jdbcType=VARCHAR}, 
      #{viewEmployeeIds,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{accessGroup,jdbcType=INTEGER}, 
      #{amendTime,jdbcType=TIMESTAMP}, #{amender,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{creator,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{step,jdbcType=VARCHAR}, 
      #{driver,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sliansoft.slianOA.dataaccess.model.OaVehicleUsedRecord" >
    insert into oa_vehicle_used_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="vehicleUsedRecordId != null" >
        vehicle_used_record_id,
      </if>
      <if test="vehicleId != null" >
        vehicle_id,
      </if>
      <if test="employeeId != null" >
        employee_id,
      </if>
      <if test="beginTime != null" >
        begin_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="planReturnTime != null" >
        plan_return_time,
      </if>
      <if test="trueReturnTime != null" >
        true_return_time,
      </if>
      <if test="vurDestination != null" >
        vur_destination,
      </if>
      <if test="vurTogether != null" >
        vur_together,
      </if>
      <if test="vurReportSite != null" >
        vur_report_site,
      </if>
      <if test="vurLinkman != null" >
        vur_linkman,
      </if>
      <if test="telephone != null" >
        telephone,
      </if>
      <if test="assignment != null" >
        assignment,
      </if>
      <if test="beginVelMileage != null" >
        begin_vel_mileage,
      </if>
      <if test="returnVelMileage != null" >
        return_vel_mileage,
      </if>
      <if test="trueOutTime != null" >
        true_out_time,
      </if>
      <if test="preEvents != null" >
        pre_events,
      </if>
      <if test="isReaded != null" >
        is_readed,
      </if>
      <if test="viewEmployeeIds != null" >
        view_employee_ids,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="accessGroup != null" >
        access_group,
      </if>
      <if test="amendTime != null" >
        amend_time,
      </if>
      <if test="amender != null" >
        amender,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="step != null" >
        step,
      </if>
      <if test="driver != null" >
        driver,
      </if>
      <if test="type != null" >
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="vehicleUsedRecordId != null" >
        #{vehicleUsedRecordId,jdbcType=INTEGER},
      </if>
      <if test="vehicleId != null" >
        #{vehicleId,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null" >
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="beginTime != null" >
        #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="planReturnTime != null" >
        #{planReturnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="trueReturnTime != null" >
        #{trueReturnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="vurDestination != null" >
        #{vurDestination,jdbcType=VARCHAR},
      </if>
      <if test="vurTogether != null" >
        #{vurTogether,jdbcType=VARCHAR},
      </if>
      <if test="vurReportSite != null" >
        #{vurReportSite,jdbcType=VARCHAR},
      </if>
      <if test="vurLinkman != null" >
        #{vurLinkman,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="assignment != null" >
        #{assignment,jdbcType=VARCHAR},
      </if>
      <if test="beginVelMileage != null" >
        #{beginVelMileage,jdbcType=DOUBLE},
      </if>
      <if test="returnVelMileage != null" >
        #{returnVelMileage,jdbcType=DOUBLE},
      </if>
      <if test="trueOutTime != null" >
        #{trueOutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="preEvents != null" >
        #{preEvents,jdbcType=VARCHAR},
      </if>
      <if test="isReaded != null" >
        #{isReaded,jdbcType=VARCHAR},
      </if>
      <if test="viewEmployeeIds != null" >
        #{viewEmployeeIds,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="accessGroup != null" >
        #{accessGroup,jdbcType=INTEGER},
      </if>
      <if test="amendTime != null" >
        #{amendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amender != null" >
        #{amender,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="step != null" >
        #{step,jdbcType=VARCHAR},
      </if>
      <if test="driver != null" >
        #{driver,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <insert id="insertAndGetId" useGeneratedKeys="true" keyProperty="vehicleUsedRecordId" parameterType="com.sliansoft.slianOA.dataaccess.model.OaVehicleUsedRecord" >
    insert into oa_vehicle_used_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="vehicleUsedRecordId != null" >
        vehicle_used_record_id,
      </if>
      <if test="vehicleId != null" >
        vehicle_id,
      </if>
      <if test="employeeId != null" >
        employee_id,
      </if>
      <if test="beginTime != null" >
        begin_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="planReturnTime != null" >
        plan_return_time,
      </if>
      <if test="trueReturnTime != null" >
        true_return_time,
      </if>
      <if test="vurDestination != null" >
        vur_destination,
      </if>
      <if test="vurTogether != null" >
        vur_together,
      </if>
      <if test="vurReportSite != null" >
        vur_report_site,
      </if>
      <if test="vurLinkman != null" >
        vur_linkman,
      </if>
      <if test="telephone != null" >
        telephone,
      </if>
      <if test="assignment != null" >
        assignment,
      </if>
      <if test="beginVelMileage != null" >
        begin_vel_mileage,
      </if>
      <if test="returnVelMileage != null" >
        return_vel_mileage,
      </if>
      <if test="trueOutTime != null" >
        true_out_time,
      </if>
      <if test="preEvents != null" >
        pre_events,
      </if>
      <if test="isReaded != null" >
        is_readed,
      </if>
      <if test="viewEmployeeIds != null" >
        view_employee_ids,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="accessGroup != null" >
        access_group,
      </if>
      <if test="amendTime != null" >
        amend_time,
      </if>
      <if test="amender != null" >
        amender,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="step != null" >
        step,
      </if>
      <if test="driver != null" >
        driver,
      </if>
      <if test="type != null" >
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="vehicleUsedRecordId != null" >
        #{vehicleUsedRecordId,jdbcType=INTEGER},
      </if>
      <if test="vehicleId != null" >
        #{vehicleId,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null" >
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="beginTime != null" >
        #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="planReturnTime != null" >
        #{planReturnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="trueReturnTime != null" >
        #{trueReturnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="vurDestination != null" >
        #{vurDestination,jdbcType=VARCHAR},
      </if>
      <if test="vurTogether != null" >
        #{vurTogether,jdbcType=VARCHAR},
      </if>
      <if test="vurReportSite != null" >
        #{vurReportSite,jdbcType=VARCHAR},
      </if>
      <if test="vurLinkman != null" >
        #{vurLinkman,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="assignment != null" >
        #{assignment,jdbcType=VARCHAR},
      </if>
      <if test="beginVelMileage != null" >
        #{beginVelMileage,jdbcType=DOUBLE},
      </if>
      <if test="returnVelMileage != null" >
        #{returnVelMileage,jdbcType=DOUBLE},
      </if>
      <if test="trueOutTime != null" >
        #{trueOutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="preEvents != null" >
        #{preEvents,jdbcType=VARCHAR},
      </if>
      <if test="isReaded != null" >
        #{isReaded,jdbcType=VARCHAR},
      </if>
      <if test="viewEmployeeIds != null" >
        #{viewEmployeeIds,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="accessGroup != null" >
        #{accessGroup,jdbcType=INTEGER},
      </if>
      <if test="amendTime != null" >
        #{amendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amender != null" >
        #{amender,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="step != null" >
        #{step,jdbcType=VARCHAR},
      </if>
      <if test="driver != null" >
        #{driver,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sliansoft.slianOA.dataaccess.model.OaVehicleUsedRecordExample" resultType="java.lang.Integer" >
    select count(*) from oa_vehicle_used_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update oa_vehicle_used_record
    <set >
      <if test="record.vehicleUsedRecordId != null" >
        vehicle_used_record_id = #{record.vehicleUsedRecordId,jdbcType=INTEGER},
      </if>
      <if test="record.vehicleId != null" >
        vehicle_id = #{record.vehicleId,jdbcType=INTEGER},
      </if>
      <if test="record.employeeId != null" >
        employee_id = #{record.employeeId,jdbcType=INTEGER},
      </if>
      <if test="record.beginTime != null" >
        begin_time = #{record.beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.planReturnTime != null" >
        plan_return_time = #{record.planReturnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.trueReturnTime != null" >
        true_return_time = #{record.trueReturnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.vurDestination != null" >
        vur_destination = #{record.vurDestination,jdbcType=VARCHAR},
      </if>
      <if test="record.vurTogether != null" >
        vur_together = #{record.vurTogether,jdbcType=VARCHAR},
      </if>
      <if test="record.vurReportSite != null" >
        vur_report_site = #{record.vurReportSite,jdbcType=VARCHAR},
      </if>
      <if test="record.vurLinkman != null" >
        vur_linkman = #{record.vurLinkman,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null" >
        telephone = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.assignment != null" >
        assignment = #{record.assignment,jdbcType=VARCHAR},
      </if>
      <if test="record.beginVelMileage != null" >
        begin_vel_mileage = #{record.beginVelMileage,jdbcType=DOUBLE},
      </if>
      <if test="record.returnVelMileage != null" >
        return_vel_mileage = #{record.returnVelMileage,jdbcType=DOUBLE},
      </if>
      <if test="record.trueOutTime != null" >
        true_out_time = #{record.trueOutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.preEvents != null" >
        pre_events = #{record.preEvents,jdbcType=VARCHAR},
      </if>
      <if test="record.isReaded != null" >
        is_readed = #{record.isReaded,jdbcType=VARCHAR},
      </if>
      <if test="record.viewEmployeeIds != null" >
        view_employee_ids = #{record.viewEmployeeIds,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.accessGroup != null" >
        access_group = #{record.accessGroup,jdbcType=INTEGER},
      </if>
      <if test="record.amendTime != null" >
        amend_time = #{record.amendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.amender != null" >
        amender = #{record.amender,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creator != null" >
        creator = #{record.creator,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.step != null" >
        step = #{record.step,jdbcType=VARCHAR},
      </if>
      <if test="record.driver != null" >
        driver = #{record.driver,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update oa_vehicle_used_record
    set vehicle_used_record_id = #{record.vehicleUsedRecordId,jdbcType=INTEGER},
      vehicle_id = #{record.vehicleId,jdbcType=INTEGER},
      employee_id = #{record.employeeId,jdbcType=INTEGER},
      begin_time = #{record.beginTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      plan_return_time = #{record.planReturnTime,jdbcType=TIMESTAMP},
      true_return_time = #{record.trueReturnTime,jdbcType=TIMESTAMP},
      vur_destination = #{record.vurDestination,jdbcType=VARCHAR},
      vur_together = #{record.vurTogether,jdbcType=VARCHAR},
      vur_report_site = #{record.vurReportSite,jdbcType=VARCHAR},
      vur_linkman = #{record.vurLinkman,jdbcType=VARCHAR},
      telephone = #{record.telephone,jdbcType=VARCHAR},
      assignment = #{record.assignment,jdbcType=VARCHAR},
      begin_vel_mileage = #{record.beginVelMileage,jdbcType=DOUBLE},
      return_vel_mileage = #{record.returnVelMileage,jdbcType=DOUBLE},
      true_out_time = #{record.trueOutTime,jdbcType=TIMESTAMP},
      pre_events = #{record.preEvents,jdbcType=VARCHAR},
      is_readed = #{record.isReaded,jdbcType=VARCHAR},
      view_employee_ids = #{record.viewEmployeeIds,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      access_group = #{record.accessGroup,jdbcType=INTEGER},
      amend_time = #{record.amendTime,jdbcType=TIMESTAMP},
      amender = #{record.amender,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      creator = #{record.creator,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      step = #{record.step,jdbcType=VARCHAR},
      driver = #{record.driver,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sliansoft.slianOA.dataaccess.model.OaVehicleUsedRecord" >
    update oa_vehicle_used_record
    <set >
      <if test="vehicleId != null" >
        vehicle_id = #{vehicleId,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null" >
        employee_id = #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="beginTime != null" >
        begin_time = #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="planReturnTime != null" >
        plan_return_time = #{planReturnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="trueReturnTime != null" >
        true_return_time = #{trueReturnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="vurDestination != null" >
        vur_destination = #{vurDestination,jdbcType=VARCHAR},
      </if>
      <if test="vurTogether != null" >
        vur_together = #{vurTogether,jdbcType=VARCHAR},
      </if>
      <if test="vurReportSite != null" >
        vur_report_site = #{vurReportSite,jdbcType=VARCHAR},
      </if>
      <if test="vurLinkman != null" >
        vur_linkman = #{vurLinkman,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="assignment != null" >
        assignment = #{assignment,jdbcType=VARCHAR},
      </if>
      <if test="beginVelMileage != null" >
        begin_vel_mileage = #{beginVelMileage,jdbcType=DOUBLE},
      </if>
      <if test="returnVelMileage != null" >
        return_vel_mileage = #{returnVelMileage,jdbcType=DOUBLE},
      </if>
      <if test="trueOutTime != null" >
        true_out_time = #{trueOutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="preEvents != null" >
        pre_events = #{preEvents,jdbcType=VARCHAR},
      </if>
      <if test="isReaded != null" >
        is_readed = #{isReaded,jdbcType=VARCHAR},
      </if>
      <if test="viewEmployeeIds != null" >
        view_employee_ids = #{viewEmployeeIds,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="accessGroup != null" >
        access_group = #{accessGroup,jdbcType=INTEGER},
      </if>
      <if test="amendTime != null" >
        amend_time = #{amendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amender != null" >
        amender = #{amender,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="step != null" >
        step = #{step,jdbcType=VARCHAR},
      </if>
      <if test="driver != null" >
        driver = #{driver,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
    </set>
    where vehicle_used_record_id = #{vehicleUsedRecordId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sliansoft.slianOA.dataaccess.model.OaVehicleUsedRecord" >
    update oa_vehicle_used_record
    set vehicle_id = #{vehicleId,jdbcType=INTEGER},
      employee_id = #{employeeId,jdbcType=INTEGER},
      begin_time = #{beginTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      plan_return_time = #{planReturnTime,jdbcType=TIMESTAMP},
      true_return_time = #{trueReturnTime,jdbcType=TIMESTAMP},
      vur_destination = #{vurDestination,jdbcType=VARCHAR},
      vur_together = #{vurTogether,jdbcType=VARCHAR},
      vur_report_site = #{vurReportSite,jdbcType=VARCHAR},
      vur_linkman = #{vurLinkman,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      assignment = #{assignment,jdbcType=VARCHAR},
      begin_vel_mileage = #{beginVelMileage,jdbcType=DOUBLE},
      return_vel_mileage = #{returnVelMileage,jdbcType=DOUBLE},
      true_out_time = #{trueOutTime,jdbcType=TIMESTAMP},
      pre_events = #{preEvents,jdbcType=VARCHAR},
      is_readed = #{isReaded,jdbcType=VARCHAR},
      view_employee_ids = #{viewEmployeeIds,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      access_group = #{accessGroup,jdbcType=INTEGER},
      amend_time = #{amendTime,jdbcType=TIMESTAMP},
      amender = #{amender,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      step = #{step,jdbcType=VARCHAR},
      driver = #{driver,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR}
    where vehicle_used_record_id = #{vehicleUsedRecordId,jdbcType=INTEGER}
  </update>
  <resultMap id="selectPageResult" extends="BaseResultMap" type="com.sliansoft.slianOA.dataaccess.model.OaVehicleUsedRecord" >
    <!--
<association property="" column="" javaType="">
   <id column="" property="" jdbcType="" />
   <result column="" property="" jdbcType="" />
 </association>
-->
  </resultMap>
  <sql id="select_by_page_outter_where_sql" >
      <if test="oredCriteria.size>0">     <if test="_parameter != null" > <include refid="Example_Where_Clause"/> </if>    and   </if>  <if test="oredCriteria.size==0">     where   </if> 
  </sql>
  <sql id="select_by_page_inner_where_and_orderby_sql" >
      <if test="oredCriteria.size>0">     <if test="_parameter != null" > <include refid="Example_Where_Clause"/> </if>  </if>   <if test="orderByClause != null">    order by ${orderByClause}   </if> 
  </sql>
  <sql id="select_by_page_outter_orderby_sql" >
       <if test="orderByClause != null">    order by ${orderByClause}   </if> 
  </sql>
  <select id="selectPage" resultMap="selectPageResult" parameterType="com.sliansoft.slianOA.dataaccess.model.OaVehicleUsedRecordExample" >
    select a.* from oa_vehicle_used_record a where a.vehicle_used_record_id in 
 (select top ${pageSize} vehicle_used_record_id from oa_vehicle_used_record 
<include refid="select_by_page_outter_where_sql"/> 
vehicle_used_record_id not in (select top ${skipRecordCount} vehicle_used_record_id from oa_vehicle_used_record  
<include refid="select_by_page_inner_where_and_orderby_sql"/> 
 ) 
<include refid="select_by_page_outter_orderby_sql"/> 
)
  </select>
</mapper>