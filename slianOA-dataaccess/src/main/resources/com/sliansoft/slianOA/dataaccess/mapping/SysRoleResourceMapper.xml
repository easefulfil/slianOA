<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sliansoft.slianOA.dataaccess.dao.SysRoleResourceMapper" >
  <resultMap id="BaseResultMap" type="com.sliansoft.slianOA.dataaccess.model.SysRoleResource" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="rid" property="rid" jdbcType="INTEGER" />
    <result column="resid" property="resid" jdbcType="INTEGER" />
    <result column="organization_id" property="organizationId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, rid, resid, organization_id, status, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sliansoft.slianOA.dataaccess.model.SysRoleResourceExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_role_resource
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_role_resource
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_role_resource
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sliansoft.slianOA.dataaccess.model.SysRoleResourceExample" >
    delete from sys_role_resource
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sliansoft.slianOA.dataaccess.model.SysRoleResource" >
    insert into sys_role_resource (id, rid, resid, 
      organization_id, status, create_time
      )
    values (#{id,jdbcType=INTEGER}, #{rid,jdbcType=INTEGER}, #{resid,jdbcType=INTEGER}, 
      #{organizationId,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sliansoft.slianOA.dataaccess.model.SysRoleResource" >
    insert into sys_role_resource
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="rid != null" >
        rid,
      </if>
      <if test="resid != null" >
        resid,
      </if>
      <if test="organizationId != null" >
        organization_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="rid != null" >
        #{rid,jdbcType=INTEGER},
      </if>
      <if test="resid != null" >
        #{resid,jdbcType=INTEGER},
      </if>
      <if test="organizationId != null" >
        #{organizationId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sliansoft.slianOA.dataaccess.model.SysRoleResourceExample" resultType="java.lang.Integer" >
    select count(*) from sys_role_resource
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_role_resource
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.rid != null" >
        rid = #{record.rid,jdbcType=INTEGER},
      </if>
      <if test="record.resid != null" >
        resid = #{record.resid,jdbcType=INTEGER},
      </if>
      <if test="record.organizationId != null" >
        organization_id = #{record.organizationId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_role_resource
    set id = #{record.id,jdbcType=INTEGER},
      rid = #{record.rid,jdbcType=INTEGER},
      resid = #{record.resid,jdbcType=INTEGER},
      organization_id = #{record.organizationId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sliansoft.slianOA.dataaccess.model.SysRoleResource" >
    update sys_role_resource
    <set >
      <if test="rid != null" >
        rid = #{rid,jdbcType=INTEGER},
      </if>
      <if test="resid != null" >
        resid = #{resid,jdbcType=INTEGER},
      </if>
      <if test="organizationId != null" >
        organization_id = #{organizationId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sliansoft.slianOA.dataaccess.model.SysRoleResource" >
    update sys_role_resource
    set rid = #{rid,jdbcType=INTEGER},
      resid = #{resid,jdbcType=INTEGER},
      organization_id = #{organizationId,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="selectPageResult" extends="BaseResultMap" type="com.sliansoft.slianOA.dataaccess.model.SysRoleResource" >
    <!--
<association property="" column="" javaType="">
   <id column="" property="" jdbcType="" />
   <result column="" property="" jdbcType="" />
 </association>
-->
  </resultMap>
  <sql id="select_by_page_outter_where_sql" >
      <if test="oredCriteria.size>0">     <if test="_parameter != null" > <include refid="Example_Where_Clause"/> </if>   and   </if>  <if test="oredCriteria.size==0">     where   </if> 
  </sql>
  <sql id="select_by_page_inner_where_and_orderby_sql" >
      <if test="oredCriteria.size>0">     <if test="_parameter != null" > <include refid="Example_Where_Clause"/> </if>  </if>   <if test="orderByClause != null">    order by ${orderByClause}   </if> 
  </sql>
  <sql id="select_by_page_outter_orderby_sql" >
       <if test="orderByClause != null">    order by ${orderByClause}   </if> 
  </sql>
  <select id="selectPage" resultMap="selectPageResult" parameterType="com.sliansoft.slianOA.dataaccess.model.SysRoleResourceExample" >
    select a.* from sys_role_resource a where a.id in 
 (select top ${pageSize} id from sys_role_resource 
<include refid="select_by_page_outter_where_sql"/> 
id not in (select top ${skipRecordCount} id from sys_role_resource  
<include refid="select_by_page_inner_where_and_orderby_sql"/> 
 ) 
<include refid="select_by_page_outter_orderby_sql"/> 
 )
  </select>
</mapper>