<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jaxws="http://cxf.apache.org/jaxws" xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"
	xmlns:cloud="http://schema.cloudfoundry.org/spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util-3.0.xsd
	http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring
	http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.2.xsd
    http://schema.cloudfoundry.org/spring
    http://schema.cloudfoundry.org/spring/cloudfoundry-spring.xsd">

	 <!-- 扫描上下文 -->
	<!-- <context:component-scan base-package="com.mz3co.bspheis.dataaccesss.dao" />  -->

	<!-- 属性文件配置 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:db.properties</value>
				<value>classpath:db_en.properties</value>
				<!--要是有多个配置文件，只需在这里继续添加即可 -->
			</list>
		</property>
	</bean>

	<!-- 数据源配置 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${db.driverClassName}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
		<property name="testOnBorrow" value="${db.testOnBorrow}" />
		<property name="testWhileIdle" value="${db.testWhileIdle}" />
		<property name="timeBetweenEvictionRunsMillis" value="${db.timeBetweenEvictionRunsMillis}" />
		<property name="validationQuery" value="select 1 from dual"></property>
	</bean>

 	<bean id="dataEntanceGuardSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${db_en.driverClassName}" />
		<property name="url" value="${db_en.url}" />

	</bean> 
	
	<!-- 配置SqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- <property name="dataEntanceGuardSource" ref="dataSource" /> -->
		<property name="configLocation" value="classpath:sqlMapConfig.xml"/><!-- classpath:configuration.xml  -->
	</bean>
	

	<!-- 事务管理 -->
	<bean name="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
		
	</bean>

	<!--  拦击通知点配置 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="select*" propagation="REQUIRED" />
			<tx:method name="count*" propagation="REQUIRED" />
			<tx:method name="find*" propagation="REQUIRED" />
			<tx:method name="get*" propagation="REQUIRED" />
			<tx:method name="change*" propagation="REQUIRED" />
			<tx:method name="refresh*" propagation="REQUIRED" />
			<tx:method name="log*" propagation="REQUIRES_NEW" />
		</tx:attributes>
	</tx:advice>
	<bean id="aspectForLog" class="com.slianOAsys.sysadmin.log.AspectForLog" />
	<aop:aspectj-autoproxy />
	
	<aop:config>
		<aop:pointcut expression="execution(* com.slianOAsys.service.*.*.*(..))" id="basicServiceMethod"/>
		<aop:advisor pointcut-ref="basicServiceMethod" advice-ref="txAdvice"/>
	</aop:config>
   		<!-- <aop:aspectj-autoproxy />
 	 	<bean id="LogAspcom.mz3co.pcbas.dataaccessm.mz3co.pcbas.dataaccess.platform.aop.LogAspect" class="com.mz3co.bspheis.sysadmin.log.AspectForLog">
		<aop:scoped-proxy />
		</bean>  -->
        <aop:aspectj-autoproxy proxy-target-class="true" />
		

	<!-- 支持 @Transactional 标记 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!--创建数据映射器，使用自动扫描包的方式来注册各种映射器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.slianOAsys.dao" />
	</bean>
	
	<!-- 自动代理 -->
	<context:annotation-config />

	<!-- <bean id="dozerBeanMapper" class="org.dozer.DozerBeanMapper" />
	<ehcache:annotation-driven cache-manager="cacheManager" /> <bean id="cacheManager" 
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"> <property 
		name="configLocation" value="classpath:ehcache.xml" /> </bean> -->
		
	<!-- spring系统启动以后，加载该类，查询所有数据 -->
	<bean class="com.slianOAsys.admin.utils.SysConstInitListener"></bean>
	
	
	<bean id="excelOperation"
		class="com.slianOAsys.admin.utils.ExcelOperation" abstract="false"
		lazy-init="default" autowire="default">
	</bean>
	
	<bean id="excelTemplateImport"
		class="com.slianOAsys.admin.utils.ExcelTemplateImport" abstract="false"
		lazy-init="default" autowire="default">
	</bean>
</beans>
