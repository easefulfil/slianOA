<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.slianOAsys.dao.ex.SlianoaClassExMapper">
  <resultMap id="BaseResultMap" type="com.slianOAsys.model.ex.ClassEx">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="class_id" jdbcType="INTEGER" property="classId" />
    <result column="class_name" jdbcType="VARCHAR" property="className" />
    <result column="start_time" jdbcType="TIME" property="startTime" />
    <result column="end_time" jdbcType="TIME" property="endTime" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="sign_address" jdbcType="VARCHAR" property="signAddress" />
    <result column="longitude" jdbcType="REAL" property="longitude" />
    <result column="latitude" jdbcType="REAL" property="latitude" />
    <result column="scope" jdbcType="INTEGER" property="scope" />
    <result column="signin_start" jdbcType="TIME" property="signinStart" />
    <result column="signin_end" jdbcType="TIME" property="signinEnd" />
    <result column="signoff_start" jdbcType="TIME" property="signoffStart" />
    <result column="signoff_end" jdbcType="TIME" property="signoffEnd" />
    <result column="class_status" jdbcType="VARCHAR" property="classStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="is_monday" jdbcType="INTEGER" property="isMonday" />
    <result column="is_tuesday" jdbcType="INTEGER" property="isTuesday" />
    <result column="is_wednesday" jdbcType="INTEGER" property="isWednesday" />
    <result column="is_thursday" jdbcType="INTEGER" property="isThursday" />
    <result column="is_friday" jdbcType="INTEGER" property="isFriday" />
    <result column="is_saturday" jdbcType="INTEGER" property="isSaturday" />
    <result column="is_sunday" jdbcType="INTEGER" property="isSunday" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    class_id, class_name, start_time, end_time, description, sign_address, longitude, 
    latitude, scope, signin_start, signin_end, signoff_start, signoff_end, class_status, 
    create_time, is_monday, is_tuesday, is_wednesday, is_thursday, is_friday, is_saturday, 
    is_sunday
  </sql>
  <select id="selectByExample" parameterType="com.slianOAsys.model.SlianoaClassExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from slianoa_class
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="page != null" >
      limit #{page.begin} , #{page.length}
    </if>
  </select>
  <select id="countByExample" parameterType="com.slianOAsys.model.SlianoaClassExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from slianoa_class
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="getClassById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select sc.class_name,
    sc.start_time,sc.end_time,
    sc.sign_address,sc.longitude,sc.latitude,
    sc.scope,sc.signin_start,sc.signin_end,
    sc.signoff_start,signoff_end,
    sc.is_monday, sc.is_tuesday, 
    sc.is_wednesday, sc.is_thursday, 
    sc.is_friday,sc. is_saturday, 
    sc.is_sunday from slianoa_class sc 
    where sc.class_id=#{0}
  </select>
</mapper>