<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.slianOAsys.dao.SlianoaAppealMapper">
  <resultMap id="BaseResultMap" type="com.slianOAsys.model.SlianoaAppeal">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="appeal_id" jdbcType="INTEGER" property="appealId" />
    <result column="employee_id" jdbcType="INTEGER" property="employeeId" />
    <result column="appeal_time" jdbcType="VARCHAR" property="appealTime" />
    <result column="abnormal_status" jdbcType="VARCHAR" property="abnormalStatus" />
    <result column="appeal_reason" jdbcType="VARCHAR" property="appealReason" />
    <result column="appeal_status" jdbcType="VARCHAR" property="appealStatus" />
    <result column="handle_employee_id" jdbcType="INTEGER" property="handleEmployeeId" />
    <result column="related_employee" jdbcType="VARCHAR" property="relatedEmployee" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="handle_time" jdbcType="VARCHAR" property="handleTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    appeal_id, employee_id, appeal_time, abnormal_status, appeal_reason, appeal_status, 
    handle_employee_id, related_employee, create_time, handle_time
  </sql>
  <select id="selectByExample" parameterType="com.slianOAsys.model.SlianoaAppealExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from slianoa_appeal
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from slianoa_appeal
    where appeal_id = #{appealId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from slianoa_appeal
    where appeal_id = #{appealId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.slianOAsys.model.SlianoaAppealExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from slianoa_appeal
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.slianOAsys.model.SlianoaAppeal">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into slianoa_appeal (appeal_id, employee_id, appeal_time, 
      abnormal_status, appeal_reason, appeal_status, 
      handle_employee_id, related_employee, create_time, 
      handle_time)
    values (#{appealId,jdbcType=INTEGER}, #{employeeId,jdbcType=INTEGER}, #{appealTime,jdbcType=VARCHAR}, 
      #{abnormalStatus,jdbcType=VARCHAR}, #{appealReason,jdbcType=VARCHAR}, #{appealStatus,jdbcType=VARCHAR}, 
      #{handleEmployeeId,jdbcType=INTEGER}, #{relatedEmployee,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{handleTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.slianOAsys.model.SlianoaAppeal">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into slianoa_appeal
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="appealId != null">
        appeal_id,
      </if>
      <if test="employeeId != null">
        employee_id,
      </if>
      <if test="appealTime != null">
        appeal_time,
      </if>
      <if test="abnormalStatus != null">
        abnormal_status,
      </if>
      <if test="appealReason != null">
        appeal_reason,
      </if>
      <if test="appealStatus != null">
        appeal_status,
      </if>
      <if test="handleEmployeeId != null">
        handle_employee_id,
      </if>
      <if test="relatedEmployee != null">
        related_employee,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="handleTime != null">
        handle_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="appealId != null">
        #{appealId,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null">
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="appealTime != null">
        #{appealTime,jdbcType=VARCHAR},
      </if>
      <if test="abnormalStatus != null">
        #{abnormalStatus,jdbcType=VARCHAR},
      </if>
      <if test="appealReason != null">
        #{appealReason,jdbcType=VARCHAR},
      </if>
      <if test="appealStatus != null">
        #{appealStatus,jdbcType=VARCHAR},
      </if>
      <if test="handleEmployeeId != null">
        #{handleEmployeeId,jdbcType=INTEGER},
      </if>
      <if test="relatedEmployee != null">
        #{relatedEmployee,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="handleTime != null">
        #{handleTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.slianOAsys.model.SlianoaAppealExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from slianoa_appeal
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update slianoa_appeal
    <set>
      <if test="record.appealId != null">
        appeal_id = #{record.appealId,jdbcType=INTEGER},
      </if>
      <if test="record.employeeId != null">
        employee_id = #{record.employeeId,jdbcType=INTEGER},
      </if>
      <if test="record.appealTime != null">
        appeal_time = #{record.appealTime,jdbcType=VARCHAR},
      </if>
      <if test="record.abnormalStatus != null">
        abnormal_status = #{record.abnormalStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.appealReason != null">
        appeal_reason = #{record.appealReason,jdbcType=VARCHAR},
      </if>
      <if test="record.appealStatus != null">
        appeal_status = #{record.appealStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.handleEmployeeId != null">
        handle_employee_id = #{record.handleEmployeeId,jdbcType=INTEGER},
      </if>
      <if test="record.relatedEmployee != null">
        related_employee = #{record.relatedEmployee,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.handleTime != null">
        handle_time = #{record.handleTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update slianoa_appeal
    set appeal_id = #{record.appealId,jdbcType=INTEGER},
      employee_id = #{record.employeeId,jdbcType=INTEGER},
      appeal_time = #{record.appealTime,jdbcType=VARCHAR},
      abnormal_status = #{record.abnormalStatus,jdbcType=VARCHAR},
      appeal_reason = #{record.appealReason,jdbcType=VARCHAR},
      appeal_status = #{record.appealStatus,jdbcType=VARCHAR},
      handle_employee_id = #{record.handleEmployeeId,jdbcType=INTEGER},
      related_employee = #{record.relatedEmployee,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      handle_time = #{record.handleTime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.slianOAsys.model.SlianoaAppeal">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update slianoa_appeal
    <set>
      <if test="employeeId != null">
        employee_id = #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="appealTime != null">
        appeal_time = #{appealTime,jdbcType=VARCHAR},
      </if>
      <if test="abnormalStatus != null">
        abnormal_status = #{abnormalStatus,jdbcType=VARCHAR},
      </if>
      <if test="appealReason != null">
        appeal_reason = #{appealReason,jdbcType=VARCHAR},
      </if>
      <if test="appealStatus != null">
        appeal_status = #{appealStatus,jdbcType=VARCHAR},
      </if>
      <if test="handleEmployeeId != null">
        handle_employee_id = #{handleEmployeeId,jdbcType=INTEGER},
      </if>
      <if test="relatedEmployee != null">
        related_employee = #{relatedEmployee,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="handleTime != null">
        handle_time = #{handleTime,jdbcType=VARCHAR},
      </if>
    </set>
    where appeal_id = #{appealId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.slianOAsys.model.SlianoaAppeal">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update slianoa_appeal
    set employee_id = #{employeeId,jdbcType=INTEGER},
      appeal_time = #{appealTime,jdbcType=VARCHAR},
      abnormal_status = #{abnormalStatus,jdbcType=VARCHAR},
      appeal_reason = #{appealReason,jdbcType=VARCHAR},
      appeal_status = #{appealStatus,jdbcType=VARCHAR},
      handle_employee_id = #{handleEmployeeId,jdbcType=INTEGER},
      related_employee = #{relatedEmployee,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      handle_time = #{handleTime,jdbcType=VARCHAR}
    where appeal_id = #{appealId,jdbcType=INTEGER}
  </update>
</mapper>