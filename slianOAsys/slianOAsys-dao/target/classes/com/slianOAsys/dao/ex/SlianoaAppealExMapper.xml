<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.slianOAsys.dao.ex.SlianoaAppealExMapper" >
  <resultMap id="BaseResultMap" type="com.slianOAsys.model.ex.AppealEx" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="appeal_id" property="appealId" jdbcType="INTEGER" />
    <result column="employee_id" property="employeeId" jdbcType="INTEGER" />
    <result column="appeal_time" property="appealTime" jdbcType="VARCHAR" />
    <result column="abnormal_status" property="abnormalStatus" jdbcType="VARCHAR" />
    <result column="appeal_reason" property="appealReason" jdbcType="VARCHAR" />
    <result column="appeal_status" property="appealStatus" jdbcType="VARCHAR" />
    <result column="handle_employee_id" property="handleEmployeeId" jdbcType="INTEGER" />
    <result column="related_employee" property="relatedEmployee" jdbcType="VARCHAR" />
 	<result column="employee_name" property="employeeName" jdbcType="VARCHAR" />
    <result column="employee_wechat" property="employeeWechat" jdbcType="VARCHAR" />
	<result column="depart_name" property="departName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    appeal_id, employee_id, appeal_time, abnormal_status, appeal_reason, appeal_status, 
    handle_employee_id, related_employee
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.slianOAsys.model.SlianoaAppealExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
     sa.employee_id, sa.appeal_time, sa.abnormal_status, 
     sa.appeal_reason, sa.appeal_status, sa.create_time,
    sa.handle_employee_id, sa.related_employee,sa.handle_employee_id,
    se.employee_name,se.employee_wechat,
    sd.depart_name 
    from slianoa_appeal sa
    left join slianoa_employee se
     on sa.employee_id=se.employee_id 
     left join slianoa_department sd 
     on se.depart_id=sd.depart_id
     <if test="_parameter != null" >
	      <include refid="Example_Where_Clause" />
	    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
     <if test="page != null" >
      limit #{page.begin} , #{page.length}
    </if>
  </select>
  <select id="countByExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
   		Select count(sa.appeal_id)
	 	from slianoa_appeal sa 
    	left join slianoa_employee se
    	on sa.employee_id=se.employee_id 
    	left join slianoa_department sd 
     	on se.depart_id=sd.depart_id
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
</mapper>