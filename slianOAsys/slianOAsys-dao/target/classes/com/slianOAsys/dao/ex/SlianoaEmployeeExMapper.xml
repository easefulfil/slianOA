<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.slianOAsys.dao.ex.SlianoaEmployeeExMapper" >
  <resultMap id="BaseResultMap" type="com.slianOAsys.model.ex.EmployeeEx" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
   <id column="employee_id" property="employeeId" jdbcType="INTEGER" />
    <result column="depart_id" property="departId" jdbcType="INTEGER" />
    <result column="employee_name" property="employeeName" jdbcType="VARCHAR" />
    <result column="employee_gender" property="employeeGender" jdbcType="VARCHAR" />
    <result column="employee_position" property="employeePosition" jdbcType="VARCHAR" />
    <result column="employee_age" property="employeeAge" jdbcType="INTEGER" />
    <result column="employee_phone_number" property="employeePhoneNumber" jdbcType="VARCHAR" />
    <result column="employee_status" property="employeeStatus" jdbcType="VARCHAR" />
    <result column="employee_Idcard" property="employeeIdcard" jdbcType="VARCHAR" />
    <result column="employee_bankcard" property="employeeBankcard" jdbcType="VARCHAR" />
    <result column="employee_openbank" property="employeeOpenbank" jdbcType="VARCHAR" />
    <result column="entrytime" property="entrytime" jdbcType="DATE" />
    <result column="leavetime" property="leavetime" jdbcType="DATE" />
    <result column="employee_Undergraduate_school" property="employeeUndergraduateSchool" jdbcType="VARCHAR" />
    <result column="employee_education_background" property="employeeEducationBackground" jdbcType="VARCHAR" />
    <result column="employee_grade" property="employeeGrade" jdbcType="VARCHAR" />
    <result column="employee_major" property="employeeMajor" jdbcType="VARCHAR" />
    <result column="employee_email" property="employeeEmail" jdbcType="VARCHAR" />
    <result column="employee_wechat" property="employeeWechat" jdbcType="VARCHAR" />
  
    <result column="work_hour" property="workHour" jdbcType="FLOAT" />
    <result column="work_hours" property="workHours" jdbcType="FLOAT" />
  	<result column="depart_name" property="departName" jdbcType="VARCHAR" />
  	<result column="class_name" property="className" jdbcType="VARCHAR" />
  	<result column="start_time" property="startTime" jdbcType="TIME" />
    <result column="end_time" property="endTime" jdbcType="TIME" />
   	<result column="actualworkday" property="actualworkday" jdbcType="INTEGER" />
   	<result column="latecount" property="latecount" jdbcType="INTEGER" />
   	<result column="beforecount" property="beforecount" jdbcType="INTEGER" />
   	<result column="latetime" property="latetime" jdbcType="INTEGER" />
   	<result column="beforetime" property="beforetime" jdbcType="INTEGER" />
   	<result column="class_status" property="classStatus" jdbcType="VARCHAR" />
   	<result column="attendance_total_status" property="attendanceTotalStatus" jdbcType="VARCHAR" />
    <result column="attendance_time" property="attendanceTime" jdbcType="VARCHAR" />
   	<result column="attendance_signtime" property="attendanceSigntime" jdbcType="TIME" />
    <result column="attendance_offtime" property="attendanceOfftime" jdbcType="TIME" />
     <result column="attendance_signstatus" property="attendanceSignstatus" jdbcType="VARCHAR" />
    <result column="attendance_offstatus" property="attendanceOffstatus" jdbcType="VARCHAR" />
    
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    employee_id, depart_id, employee_name, employee_gender, employee_position, employee_age, 
    employee_phone_number, employee_status, employee_Idcard, employee_bankcard, employee_openbank, 
    entrytime, leavetime, employee_Undergraduate_school, employee_education_background, 
    employee_grade, employee_major, employee_email, employee_wechat,depart_name
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.slianOAsys.model.ex.EmployeeExExample" >
	   select
	    <if test="distinct" >
	      distinct
	    </if>
	    employee_wechat,
	    employee_name,
	    se.employee_id,
	    depart_name,
	    sum(work_hour) as work_hours,
	    count(sa.employee_id) as actualworkday,
	    sc.class_name,sc.start_time,sc.end_time,
	    sum(case when attendance_signstatus='迟到' then 1 else 0 end) as latecount,
 		sum(case when attendance_offstatus='早退' then 1 else 0 end) as beforecount,
 		sum(case when attendance_signstatus='迟到' then MINUTE(timediff(attendance_signtime,start_time)) else 0 end)as latetime,
 		sum(case when attendance_offstatus='早退' then MINUTE(timediff(end_time,attendance_offtime)) else 0 end)as beforetime    
	    from slianoa_employee se 
	    left join slianoa_attendance sa 
	    on sa.employee_id=se.employee_id
	    left join slianoa_class_employee sce
	    on se.employee_id=sce.employee_id 
	    left join slianoa_class sc
	    on sc.class_id=sce.class_id 
	    left join slianoa_department sd
	    on se.depart_id=sd.depart_id
	    <if test="_parameter != null" >
	      <include refid="Example_Where_Clause" />
	    </if>
	    <if test="orderByClause != null" >
	      order by ${orderByClause}
	    </if>
	    group by se.employee_id
	    <if test="page != null" >
	      limit #{page.begin} , #{page.length}
	    </if>
  </select>
  <select id="selectALL" resultMap="BaseResultMap">
  	SELECT
	*
	from (
	(select
	*
	from slianoa_attendance) sa 
	join 
	(SELECT 
	*
	FROM slianoa_employee) se
	on sa.employee_id = se.employee_id
	JOIN
	(SELECT 
	* 
	FROM slianoa_department) sd
	ON se.depart_id=sd.depart_id
	JOIN
	(SELECT 
	* 
	FROM slianoa_class_employee) sce
	ON se.employee_id=sce.employee_id 
	JOIN
	(SELECT 
	* 
	FROM slianoa_class) sc
	ON sc.class_id=sce.class_id 
	)
	<if test="_parameter != null" >
	      <include refid="Example_Where_Clause" />
	</if>
  </select>
  <select id="countByExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
   select count(se.employee_id)
	    from slianoa_employee se 
	    left join slianoa_department sd 
	    on se.depart_id=sd.depart_id 
	    right join slianoa_class_employee sce 
	    on sce.employee_id=se.employee_id
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="getEmployeeIdByDepartId"  resultMap="BaseResultMap" parameterType="java.lang.Integer" >
  select employee_id from slianoa_employee where depart_id=#{0}
  </select>
  
  <!-- 
  select employee_name,se.employee_id,
	    sc.class_name,count(se.employee_id),sum(work_hour) as work_hours,
	    sum(case when attendance_signstatus='3' then 1 else 0 end) as latecount,
 		sum(case when attendance_offstatus='3' then 1 else 0 end) as beforecount
	    from slianoa_employee se 
	    left join slianoa_attendance sa 
	    on sa.employee_id=se.employee_id
	    left join slianoa_class_employee sce
	    on se.employee_id=sce.employee_id 
	    left join slianoa_class sc
	    on sc.class_id=sce.class_id group by se.employee_id
  
 select employee_name,se.employee_id,
	    sc.class_name,
	    date_add('2000-01-01 00:00:00',interval (case when attendance_signstatus='3' then timediff(attendance_signtime,start_time) else 0 end)hour_second )as latetime
	    from slianoa_employee se 
	    left join slianoa_attendance sa 
	    on sa.employee_id=se.employee_id
	    left join slianoa_class_employee sce
	    on se.employee_id=sce.employee_id 
	    left join slianoa_class sc
	    on sc.class_id=sce.class_id group by se.employee_id;
   -->
  
  
</mapper>